{"code":"import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { IconBlock, IconRadioCancel, IconRadioDefault, IconSuccess, } from '../icons';\r\nimport { Spinner } from '../spinner';\r\nexport const ProgressStatus = ({ label, mode, date, block, }) => {\r\n    if (mode !== 'upcoming' && mode !== 'failed' && !date)\r\n        date = 'No information available';\r\n    const mayHaveBlock = mode === 'done' || mode === 'succeeded';\r\n    return (React.createElement(TopContainer, { \"data-testid\": \"progressStatus\" },\r\n        React.createElement(LeftContainer, { mode: mode },\r\n            React.createElement(IconContainer, null,\r\n                React.createElement(Icon, { mode: mode })),\r\n            React.createElement(LabelContainer, null,\r\n                React.createElement(CustomLabel, { label: label, helpText: date }))),\r\n        block && mayHaveBlock && (React.createElement(BlockContainer, null,\r\n            React.createElement(\"p\", null, block),\r\n            React.createElement(\"div\", { className: \"pt-0.25\" },\r\n                React.createElement(IconBlock, { className: \"text-ui-400\" })))),\r\n        ' '));\r\n};\r\nconst TopContainer = styled.div.attrs({\r\n    className: 'flex justify-between gap-x-1.5',\r\n}) ``;\r\nconst LeftContainer = styled.div.attrs(({ mode }) => {\r\n    const className = 'flex space-x-1.5 ' + textColors[mode];\r\n    return { className };\r\n}) ``;\r\nconst IconContainer = styled.div.attrs({ className: 'my-2' }) ``;\r\nconst LabelContainer = styled.div.attrs({ className: 'my-1.5' }) ``;\r\nconst BlockContainer = styled.div.attrs({\r\n    className: 'flex items-start max-h-full space-x-1 my-2 text-ui-500 ft-text-sm',\r\n}) ``;\r\nconst textColors = {\r\n    active: 'text-primary-500',\r\n    upcoming: 'text-primary-500',\r\n    done: 'text-ui-800',\r\n    succeeded: 'text-success-800',\r\n    failed: 'text-critical-800',\r\n};\r\nconst iconColors = {\r\n    active: 'text-primary-500',\r\n    upcoming: 'text-primary-500',\r\n    done: 'text-ui-600',\r\n    succeeded: 'text-success-500',\r\n    failed: 'text-critical-500',\r\n};\r\nconst Icon = ({ mode }) => {\r\n    switch (mode) {\r\n        case 'active':\r\n            return React.createElement(Spinner, { size: 'xs', className: iconColors[mode] });\r\n        case 'upcoming':\r\n            return React.createElement(IconRadioDefault, { className: iconColors[mode] });\r\n        case 'failed':\r\n            return React.createElement(IconRadioCancel, { className: iconColors[mode] });\r\n        default:\r\n            return React.createElement(IconSuccess, { className: iconColors[mode] });\r\n    }\r\n};\r\n/* Lord knows it hurts. */\r\nconst CustomLabel = ({ label, helpText }) => {\r\n    return (React.createElement(VStack, null,\r\n        React.createElement(LabelLine, null,\r\n            React.createElement(Heading, null, label)),\r\n        helpText && React.createElement(HelpText, null, helpText)));\r\n};\r\nconst VStack = styled.div.attrs({\r\n    className: 'space-y-0.5',\r\n}) ``;\r\nconst LabelLine = styled.div.attrs({\r\n    className: 'flex space-x-1.5',\r\n}) ``;\r\nconst Heading = styled.p.attrs({\r\n    className: 'font-bold',\r\n}) ``;\r\nconst HelpText = styled.p.attrs({\r\n    className: 'ft-text-sm font-normal text-ui-500',\r\n}) ``;\r\n//# sourceMappingURL=status.js.map","references":["/root/repo/chainlink-spring-hackathon/frontend/node_modules/@types/react/index.d.ts","/root/repo/chainlink-spring-hackathon/frontend/node_modules/@types/styled-components/index.d.ts","/root/repo/chainlink-spring-hackathon/frontend/packages/ui-components/src/components/icons/index.tsx","/root/repo/chainlink-spring-hackathon/frontend/packages/ui-components/src/components/label/index.ts","/root/repo/chainlink-spring-hackathon/frontend/packages/ui-components/src/components/spinner/index.ts"],"map":"{\"version\":3,\"file\":\"status.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../src/components/progress/status.tsx\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/root/repo/chainlink-spring-hackathon/frontend/packages/ui-components/components/progress/status.d.ts","writeByteOrderMark":false,"text":"import React from 'react';\r\nexport declare type ModeType = 'active' | 'failed' | 'done' | 'succeeded' | 'upcoming';\r\nexport declare type ProgressStatusProps = {\r\n    /**\r\n     * The mode is the state of a progress' status. Simple, init? ;)\r\n     *\r\n     * Think about it this way: Imagine a list of todos. Each of those todos may\r\n     * be associated with a status of progress. If the todo:\r\n     *  - has not been tackled, its progress status would be \"upcoming\".\r\n     *  - is being tackled, progress status would be \"active\".\r\n     *  - has been tackled, its progress status would be \"done\".\r\n     *\r\n     * The additional states \"succeeded\" and \"failed\" can be used to additionally\r\n     * describe a todo that is done.\r\n     */\r\n    mode: ModeType;\r\n    /**\r\n     * Describes the name of the progress step. Think of it as the name of the\r\n     * todo in the example above.\r\n     */\r\n    label: string;\r\n    /**\r\n     * Describes when the progress status was last changed. Every mode of progress\r\n     * status MUST have a date, EXCEPT for:\r\n     * - \"upcoming\"  which NEVER has a date, (as it is in the future)\r\n     * - \"failed\" might not have a date of failure (in the case of a failed execution)\r\n     *\r\n     * If no date is passed when one is required, a fallback text will be displayed.\r\n     * */\r\n    date?: string;\r\n    /**\r\n     * If the progress status changed due to an event on a blockchain, the\r\n     * corresponding block MAY be passed. Note that upcoming, active and rejected\r\n     * mode can NEVER have a block associated.\r\n     */\r\n    block?: string;\r\n};\r\nexport declare const ProgressStatus: React.FC<ProgressStatusProps>;\r\n"}}
