{"code":"import React from 'react';\r\nimport styled from 'styled-components';\r\n/** Default link component */\r\nexport const Link = ({ disabled = false, external = true, type = 'primary', iconLeft, iconRight, label, href, ...props }) => {\r\n    return (React.createElement(StyledLink, Object.assign({ href: disabled ? undefined : href, rel: \"noopener noreferrer\", type: type, disabled: disabled }, (external ? { target: '_blank' } : {}), props, { \"data-testid\": \"link\" }),\r\n        iconLeft && React.createElement(\"div\", null, iconLeft),\r\n        React.createElement(Label, null, label || href),\r\n        !iconLeft && iconRight && React.createElement(\"div\", null, iconRight)));\r\n};\r\nconst StyledLink = styled.a.attrs(({ disabled, type }) => {\r\n    let className = 'inline-flex items-center space-x-1.5 max-w-full rounded cursor-pointer ';\r\n    className += variants[type];\r\n    className += disabled ? disabledColors[type] : defaultColors[type];\r\n    return { className };\r\n}) `\n  outline: 0; // forcefully setting to remove default Chrome black outline\n`;\r\nconst Label = styled.span.attrs({\r\n    className: 'font-bold truncate',\r\n}) ``;\r\nconst variants = {\r\n    primary: 'hover:text-primary-700 active:text-primary-800 focus-visible:ring-2 focus-visible:ring-primary-500 ',\r\n    secondary: 'hover:text-primary-100 active:text-primary-900 focus-visible:ring-2 focus-visible:ring-ui-0 ',\r\n    neutral: 'hover:text-primary-700 active:text-primary-800 focus-visible:ring-2 focus-visible:ring-primary-500 ',\r\n};\r\nconst disabledColors = {\r\n    primary: 'text-ui-300 pointer-events-none ',\r\n    secondary: 'text-primary-300 pointer-events-none ',\r\n    neutral: 'text-ui-300 pointer-events-none ',\r\n};\r\nconst defaultColors = {\r\n    primary: 'text-primary-500 ',\r\n    secondary: 'text-ui-0 ',\r\n    neutral: 'text-ui-500 ',\r\n};\r\n//# sourceMappingURL=link.js.map","references":["/root/repo/chainlink-spring-hackathon/frontend/node_modules/@types/react/index.d.ts","/root/repo/chainlink-spring-hackathon/frontend/node_modules/@types/styled-components/index.d.ts","/root/repo/chainlink-spring-hackathon/frontend/packages/ui-components/src/components/icons/index.tsx"],"map":"{\"version\":3,\"file\":\"link.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../src/components/link/link.tsx\"],\"names\":[],\"mappings\":\"AAAA,OAAO,KAAK,MAAM,OAAO,CAAC;AAC1B,OAAO,MAAM,MAAM,mBAAmB,CAAC;AAgBvC,6BAA6B;AAC7B,MAAM,CAAC,MAAM,IAAI,GAAwB,CAAC,EACxC,QAAQ,GAAG,KAAK,EAChB,QAAQ,GAAG,IAAI,EACf,IAAI,GAAG,SAAS,EAChB,QAAQ,EACR,SAAS,EACT,KAAK,EACL,IAAI,EACJ,GAAG,KAAK,EACT,EAAE,EAAE;IACH,OAAO,CACL,oBAAC,UAAU,kBACT,IAAI,EAAE,QAAQ,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,EACjC,GAAG,EAAC,qBAAqB,EACzB,IAAI,EAAE,IAAI,EACV,QAAQ,EAAE,QAAQ,IACd,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAC,MAAM,EAAE,QAAQ,EAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EACpC,KAAK,mBACG,MAAM;QAEjB,QAAQ,IAAI,iCAAM,QAAQ,CAAO;QAClC,oBAAC,KAAK,QAAE,KAAK,IAAI,IAAI,CAAS;QAC7B,CAAC,QAAQ,IAAI,SAAS,IAAI,iCAAM,SAAS,CAAO,CACtC,CACd,CAAC;AACJ,CAAC,CAAC;AAMF,MAAM,UAAU,GAAG,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,EAAC,QAAQ,EAAE,IAAI,EAAkB,EAAE,EAAE;IACtE,IAAI,SAAS,GACX,yEAAyE,CAAC;IAE5E,SAAS,IAAI,QAAQ,CAAC,IAAI,CAAC,CAAC;IAE5B,SAAS,IAAI,QAAQ,CAAC,CAAC,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;IAEnE,OAAO,EAAC,SAAS,EAAC,CAAC;AACrB,CAAC,CAAC,CAAiB;;CAElB,CAAC;AAEF,MAAM,KAAK,GAAG,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC;IAC9B,SAAS,EAAE,oBAAoB;CAChC,CAAC,CAAA,EAAE,CAAC;AAEL,MAAM,QAAQ,GAAG;IACf,OAAO,EACL,qGAAqG;IACvG,SAAS,EACP,8FAA8F;IAChG,OAAO,EACL,qGAAqG;CACxG,CAAC;AAEF,MAAM,cAAc,GAAG;IACrB,OAAO,EAAE,kCAAkC;IAC3C,SAAS,EAAE,uCAAuC;IAClD,OAAO,EAAE,kCAAkC;CAC5C,CAAC;AAEF,MAAM,aAAa,GAAG;IACpB,OAAO,EAAE,mBAAmB;IAC5B,SAAS,EAAE,YAAY;IACvB,OAAO,EAAE,cAAc;CACxB,CAAC\"}","dts":{"name":"/root/repo/chainlink-spring-hackathon/frontend/packages/ui-components/components/link/link.d.ts","writeByteOrderMark":false,"text":"import React from 'react';\r\nimport { IconType } from '../icons';\r\nexport declare type LinkProps = React.AnchorHTMLAttributes<HTMLAnchorElement> & {\r\n    disabled?: boolean;\r\n    /** whether link should open new tab to external location */\r\n    external?: boolean;\r\n    iconRight?: React.FunctionComponentElement<IconType>;\r\n    iconLeft?: React.FunctionComponentElement<IconType>;\r\n    /** optional label for the link, defaults to the href if value not provided */\r\n    label?: string;\r\n    /** link variants */\r\n    type?: 'primary' | 'secondary' | 'neutral';\r\n};\r\n/** Default link component */\r\nexport declare const Link: React.FC<LinkProps>;\r\n"}}
