{"code":"import { useEffect, useState } from 'react';\r\n// TODO: this is temporary; the sizes should come from\r\n// TW. Using this because we have to mess with different tsconfigs\r\n// to be able to pull in the tailwind config file\r\nconst reportScreenWidth = () => {\r\n    const w = window.innerWidth;\r\n    if (w < 768) {\r\n        return { isMobile: true, isTablet: false, isDesktop: false };\r\n    }\r\n    if (w < 1280) {\r\n        return { isMobile: false, isTablet: true, isDesktop: false };\r\n    }\r\n    return { isMobile: false, isTablet: false, isDesktop: true };\r\n};\r\nconst useScreen = () => {\r\n    const [widthConditions, setWidthConditions] = useState(reportScreenWidth());\r\n    useEffect(() => {\r\n        const handleChange = () => {\r\n            setWidthConditions(reportScreenWidth());\r\n        };\r\n        window.addEventListener('resize', handleChange);\r\n        return () => {\r\n            window.removeEventListener('resize', handleChange);\r\n        };\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n    return widthConditions;\r\n};\r\nexport default useScreen;\r\n//# sourceMappingURL=useScreen.js.map","references":["/root/repo/chainlink-spring-hackathon/frontend/node_modules/@types/react/index.d.ts"],"map":"{\"version\":3,\"file\":\"useScreen.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../src/hooks/useScreen.ts\"],\"names\":[],\"mappings\":\"AAAA,OAAO,EAAC,SAAS,EAAE,QAAQ,EAAC,MAAM,OAAO,CAAC;AAO1C,sDAAsD;AACtD,kEAAkE;AAClE,iDAAiD;AACjD,MAAM,iBAAiB,GAAwB,GAAG,EAAE;IAClD,MAAM,CAAC,GAAG,MAAM,CAAC,UAAU,CAAC;IAC5B,IAAI,CAAC,GAAG,GAAG,EAAE;QACX,OAAO,EAAC,QAAQ,EAAE,IAAI,EAAE,QAAQ,EAAE,KAAK,EAAE,SAAS,EAAE,KAAK,EAAC,CAAC;KAC5D;IACD,IAAI,CAAC,GAAG,IAAI,EAAE;QACZ,OAAO,EAAC,QAAQ,EAAE,KAAK,EAAE,QAAQ,EAAE,IAAI,EAAE,SAAS,EAAE,KAAK,EAAC,CAAC;KAC5D;IACD,OAAO,EAAC,QAAQ,EAAE,KAAK,EAAE,QAAQ,EAAE,KAAK,EAAE,SAAS,EAAE,IAAI,EAAC,CAAC;AAC7D,CAAC,CAAC;AAEF,MAAM,SAAS,GAAG,GAAG,EAAE;IACrB,MAAM,CAAC,eAAe,EAAE,kBAAkB,CAAC,GAAG,QAAQ,CAAC,iBAAiB,EAAE,CAAC,CAAC;IAE5E,SAAS,CAAC,GAAG,EAAE;QACb,MAAM,YAAY,GAAG,GAAG,EAAE;YACxB,kBAAkB,CAAC,iBAAiB,EAAE,CAAC,CAAC;QAC1C,CAAC,CAAC;QAEF,MAAM,CAAC,gBAAgB,CAAC,QAAQ,EAAE,YAAY,CAAC,CAAC;QAEhD,OAAO,GAAG,EAAE;YACV,MAAM,CAAC,mBAAmB,CAAC,QAAQ,EAAE,YAAY,CAAC,CAAC;QACrD,CAAC,CAAC;QACF,uDAAuD;IACzD,CAAC,EAAE,EAAE,CAAC,CAAC;IAEP,OAAO,eAAe,CAAC;AACzB,CAAC,CAAC;AAEF,eAAe,SAAS,CAAC\"}","dts":{"name":"/root/repo/chainlink-spring-hackathon/frontend/packages/ui-components/hooks/useScreen.d.ts","writeByteOrderMark":false,"text":"declare type useScreenType = {\r\n    isMobile: boolean;\r\n    isTablet: boolean;\r\n    isDesktop: boolean;\r\n};\r\ndeclare const useScreen: () => useScreenType;\r\nexport default useScreen;\r\n"}}
