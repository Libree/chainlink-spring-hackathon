{"code":"import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { IconChevronDown } from '../icons';\r\n/** Dropdown input with variable styling (depending on mode) */\r\nexport const DropdownInput = ({ mode = 'default', disabled, value, name, placeholder, onClick, }) => {\r\n    return (React.createElement(Container, Object.assign({ \"data-testid\": \"dropdown-input\" }, { mode, name, disabled, onClick }),\r\n        value || React.createElement(Placeholder, null, placeholder),\r\n        React.createElement(StyledIconChevronDown, Object.assign({}, { disabled }))));\r\n};\r\nconst Container = styled.button.attrs(({ mode, disabled }) => {\r\n    let className = `${disabled ? 'bg-ui-100' : 'bg-ui-0'} flex bg-ui-0 focus:outline-none focus-within:ring-2 \n    focus-within:ring-primary-500 py-1.5 px-2 rounded-xl w-full \n    hover:border-ui-300 border-2 active:border-primary-500 active:ring-0 \n    items-center justify-between `;\r\n    if (mode === 'default') {\r\n        className += 'border-ui-100';\r\n    }\r\n    else if (mode === 'success') {\r\n        className += 'border-success-600';\r\n    }\r\n    else if (mode === 'warning') {\r\n        className += 'border-warning-600';\r\n    }\r\n    else if (mode === 'critical') {\r\n        className += 'border-critical-600';\r\n    }\r\n    return { className };\r\n}) `\n  height: fit-content;\n`;\r\nconst StyledIconChevronDown = styled(IconChevronDown).attrs(({ disabled }) => ({\r\n    className: `${disabled ? 'text-ui-300' : 'text-ui-600'}`,\r\n})) ``;\r\nconst Placeholder = styled.span.attrs({\r\n    className: 'text-ui-300',\r\n}) ``;\r\n//# sourceMappingURL=dropdownInput.js.map","references":["/root/repo/chainlink-spring-hackathon/frontend/node_modules/@types/react/index.d.ts","/root/repo/chainlink-spring-hackathon/frontend/node_modules/@types/styled-components/index.d.ts","/root/repo/chainlink-spring-hackathon/frontend/packages/ui-components/src/components/icons/index.tsx","/root/repo/chainlink-spring-hackathon/frontend/packages/ui-components/src/components/input/numberInput.tsx"],"map":"{\"version\":3,\"file\":\"dropdownInput.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../src/components/input/dropdownInput.tsx\"],\"names\":[],\"mappings\":\"AAAA,OAAO,KAAK,MAAM,OAAO,CAAC;AAC1B,OAAO,MAAM,MAAM,mBAAmB,CAAC;AAEvC,OAAO,EAAC,eAAe,EAAC,MAAM,UAAU,CAAC;AAYzC,+DAA+D;AAE/D,MAAM,CAAC,MAAM,aAAa,GAAiC,CAAC,EAC1D,IAAI,GAAG,SAAS,EAChB,QAAQ,EACR,KAAK,EACL,IAAI,EACJ,WAAW,EACX,OAAO,GACR,EAAE,EAAE;IACH,OAAO,CACL,oBAAC,SAAS,iCACI,gBAAgB,IACxB,EAAC,IAAI,EAAE,IAAI,EAAE,QAAQ,EAAE,OAAO,EAAC;QAElC,KAAK,IAAI,oBAAC,WAAW,QAAE,WAAW,CAAe;QAClD,oBAAC,qBAAqB,oBAAK,EAAC,QAAQ,EAAC,EAAI,CAC/B,CACb,CAAC;AACJ,CAAC,CAAC;AAEF,MAAM,SAAS,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,CACnC,CAAC,EAAC,IAAI,EAAE,QAAQ,EAAuB,EAAE,EAAE;IACzC,IAAI,SAAS,GAAG,GACd,QAAQ,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,SAC3B;;;kCAG8B,CAAC;IAE/B,IAAI,IAAI,KAAK,SAAS,EAAE;QACtB,SAAS,IAAI,eAAe,CAAC;KAC9B;SAAM,IAAI,IAAI,KAAK,SAAS,EAAE;QAC7B,SAAS,IAAI,oBAAoB,CAAC;KACnC;SAAM,IAAI,IAAI,KAAK,SAAS,EAAE;QAC7B,SAAS,IAAI,oBAAoB,CAAC;KACnC;SAAM,IAAI,IAAI,KAAK,UAAU,EAAE;QAC9B,SAAS,IAAI,qBAAqB,CAAC;KACpC;IAED,OAAO,EAAC,SAAS,EAAC,CAAC;AACrB,CAAC,CACF,CAAA;;CAEA,CAAC;AAIF,MAAM,qBAAqB,GAAG,MAAM,CAAC,eAAe,CAAC,CAAC,KAAK,CACzD,CAAC,EAAC,QAAQ,EAAyB,EAAE,EAAE,CAAC,CAAC;IACvC,SAAS,EAAE,GAAG,QAAQ,CAAC,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC,aAAa,EAAE;CACzD,CAAC,CACH,CAAA,EAAE,CAAC;AAEJ,MAAM,WAAW,GAAG,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC;IACpC,SAAS,EAAE,aAAa;CACzB,CAAC,CAAA,EAAE,CAAC\"}","dts":{"name":"/root/repo/chainlink-spring-hackathon/frontend/packages/ui-components/components/input/dropdownInput.d.ts","writeByteOrderMark":false,"text":"import React from 'react';\r\nimport { StyledContainerProps } from './numberInput';\r\nexport declare type DropDownInputProps = {\r\n    /** Changes a input's color schema */\r\n    mode?: 'default' | 'success' | 'warning' | 'critical';\r\n    disabled?: boolean;\r\n    value?: string;\r\n    name?: string;\r\n    placeholder?: string;\r\n    onClick: () => void;\r\n};\r\n/** Dropdown input with variable styling (depending on mode) */\r\nexport declare const DropdownInput: React.FC<DropDownInputProps>;\r\nexport declare type StyledChevronDownProps = Pick<StyledContainerProps, 'disabled'>;\r\n"}}
