{"code":"import React from 'react';\r\nimport styled from 'styled-components';\r\n/**\r\n * Button to be used as base for other button components.\r\n * This button should not be exported with the library.\r\n * Height, font, focus, and border-radius are included.\r\n *\r\n * Note: Even if both iconRight and iconLeft are passed,\r\n * ONLY the iconLeft will be shown.\r\n */\r\nexport const ButtonBase = React.forwardRef(({ iconRight, iconLeft, iconOnly = false, size = 'medium', label, ...props }, ref) => {\r\n    return (React.createElement(BaseStyledButton, Object.assign({}, props, { size: size, ref: ref }),\r\n        iconLeft && React.createElement(IconContainer, { size: size }, iconLeft),\r\n        !iconOnly && (React.createElement(Label, { visible: label ? true : false }, label && label)),\r\n        !iconLeft && iconRight && (React.createElement(IconContainer, { size: size }, iconRight))));\r\n});\r\nButtonBase.displayName = 'ButtonBase';\r\n/**********************************\r\n *             STYLES             *\r\n **********************************/\r\nconst sizeClassNames = {\r\n    small: 'h-4 space-x-1 rounded-lg',\r\n    medium: 'h-5 space-x-1.5 rounded-larger',\r\n    large: 'h-6 space-x-1.5 rounded-xl',\r\n};\r\nconst sizeStyles = {\r\n    small: { minWidth: '32px' },\r\n    medium: { minWidth: '40px' },\r\n    large: { minWidth: '48px' },\r\n};\r\nconst fontStyles = {\r\n    small: 'ft-text-sm',\r\n    medium: 'ft-text-base',\r\n    large: 'ft-text-base',\r\n};\r\nconst iconStyles = {\r\n    small: 'w-1.5 h-1.5',\r\n    medium: 'w-2 h-2',\r\n    large: 'w-2 h-2',\r\n};\r\nconst BaseStyledButton = styled.button.attrs(({ size = 'medium' }) => {\r\n    const className = `${sizeClassNames[size]} ${fontStyles[size]} \n  flex justify-center items-center focus:outline-none focus-visible:ring-2 \n  focus-visible:ring-primary-500`;\r\n    const style = sizeStyles[size];\r\n    return { className, style };\r\n}) ``;\r\nconst Label = styled.span.attrs(({ visible }) => {\r\n    let className = 'font-bold';\r\n    if (!visible)\r\n        className += ' hidden';\r\n    return { className };\r\n}) ``;\r\nconst IconContainer = styled.span.attrs(({ size = 'medium' }) => {\r\n    const className = `flex items-center ${iconStyles[size]}`;\r\n    return { className };\r\n}) ``;\r\n//# sourceMappingURL=buttonBase.js.map","references":["/root/repo/chainlink-spring-hackathon/frontend/node_modules/@types/react/index.d.ts","/root/repo/chainlink-spring-hackathon/frontend/node_modules/@types/styled-components/index.d.ts","/root/repo/chainlink-spring-hackathon/frontend/packages/ui-components/src/components/icons/index.tsx"],"map":"{\"version\":3,\"file\":\"buttonBase.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../src/components/button/buttonBase.tsx\"],\"names\":[],\"mappings\":\"AAAA,OAAO,KAA4C,MAAM,OAAO,CAAC;AACjE,OAAO,MAAM,MAAM,mBAAmB,CAAC;AAavC;;;;;;;GAOG;AACH,MAAM,CAAC,MAAM,UAAU,GAAG,KAAK,CAAC,UAAU,CACxC,CACE,EAAC,SAAS,EAAE,QAAQ,EAAE,QAAQ,GAAG,KAAK,EAAE,IAAI,GAAG,QAAQ,EAAE,KAAK,EAAE,GAAG,KAAK,EAAC,EACzE,GAAG,EACH,EAAE;IACF,OAAO,CACL,oBAAC,gBAAgB,oBAAK,KAAK,IAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG;QAC9C,QAAQ,IAAI,oBAAC,aAAa,IAAC,IAAI,EAAE,IAAI,IAAG,QAAQ,CAAiB;QACjE,CAAC,QAAQ,IAAI,CACZ,oBAAC,KAAK,IAAC,OAAO,EAAE,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,IAAG,KAAK,IAAI,KAAK,CAAS,CAC/D;QACA,CAAC,QAAQ,IAAI,SAAS,IAAI,CACzB,oBAAC,aAAa,IAAC,IAAI,EAAE,IAAI,IAAG,SAAS,CAAiB,CACvD,CACgB,CACpB,CAAC;AACJ,CAAC,CACF,CAAC;AAEF,UAAU,CAAC,WAAW,GAAG,YAAY,CAAC;AAEtC;;oCAEoC;AACpC,MAAM,cAAc,GAAG;IACrB,KAAK,EAAE,0BAA0B;IACjC,MAAM,EAAE,gCAAgC;IACxC,KAAK,EAAE,4BAA4B;CACpC,CAAC;AAEF,MAAM,UAAU,GAAG;IACjB,KAAK,EAAE,EAAC,QAAQ,EAAE,MAAM,EAAC;IACzB,MAAM,EAAE,EAAC,QAAQ,EAAE,MAAM,EAAC;IAC1B,KAAK,EAAE,EAAC,QAAQ,EAAE,MAAM,EAAC;CAC1B,CAAC;AAEF,MAAM,UAAU,GAAG;IACjB,KAAK,EAAE,YAAY;IACnB,MAAM,EAAE,cAAc;IACtB,KAAK,EAAE,cAAc;CACtB,CAAC;AAEF,MAAM,UAAU,GAAG;IACjB,KAAK,EAAE,aAAa;IACpB,MAAM,EAAE,SAAS;IACjB,KAAK,EAAE,SAAS;CACjB,CAAC;AASF,MAAM,gBAAgB,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,EAAC,IAAI,GAAG,QAAQ,EAAY,EAAE,EAAE;IAC5E,MAAM,SAAS,GAAG,GAAG,cAAc,CAAC,IAAI,CAAC,IAAI,UAAU,CAAC,IAAI,CAAC;;iCAE9B,CAAC;IAEhC,MAAM,KAAK,GAAG,UAAU,CAAC,IAAI,CAAkB,CAAC;IAEhD,OAAO,EAAC,SAAS,EAAE,KAAK,EAAC,CAAC;AAC5B,CAAC,CAAC,CAAW,EAAE,CAAC;AAMhB,MAAM,KAAK,GAAG,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAC,OAAO,EAAa,EAAE,EAAE;IACxD,IAAI,SAAS,GAAG,WAAW,CAAC;IAC5B,IAAI,CAAC,OAAO;QAAE,SAAS,IAAI,SAAS,CAAC;IACrC,OAAO,EAAC,SAAS,EAAC,CAAC;AACrB,CAAC,CAAC,CAAY,EAAE,CAAC;AAEjB,MAAM,aAAa,GAAG,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAC,IAAI,GAAG,QAAQ,EAAY,EAAE,EAAE;IACvE,MAAM,SAAS,GAAG,qBAAqB,UAAU,CAAC,IAAI,CAAC,EAAE,CAAC;IAC1D,OAAO,EAAC,SAAS,EAAC,CAAC;AACrB,CAAC,CAAC,CAAW,EAAE,CAAC\"}","dts":{"name":"/root/repo/chainlink-spring-hackathon/frontend/packages/ui-components/components/button/buttonBase.d.ts","writeByteOrderMark":false,"text":"import React, { ButtonHTMLAttributes } from 'react';\r\nimport { IconType } from '../icons';\r\nexport declare type ButtonBaseProps = ButtonHTMLAttributes<HTMLButtonElement> & {\r\n    iconOnly?: boolean;\r\n    iconLeft?: React.FunctionComponentElement<IconType>;\r\n    iconRight?: React.FunctionComponentElement<IconType>;\r\n    label?: string;\r\n    mode?: 'primary' | 'secondary' | 'ghost';\r\n    size?: 'small' | 'medium' | 'large';\r\n};\r\n/**\r\n * Button to be used as base for other button components.\r\n * This button should not be exported with the library.\r\n * Height, font, focus, and border-radius are included.\r\n *\r\n * Note: Even if both iconRight and iconLeft are passed,\r\n * ONLY the iconLeft will be shown.\r\n */\r\nexport declare const ButtonBase: React.ForwardRefExoticComponent<React.ButtonHTMLAttributes<HTMLButtonElement> & {\r\n    iconOnly?: boolean | undefined;\r\n    iconLeft?: React.FunctionComponentElement<IconType> | undefined;\r\n    iconRight?: React.FunctionComponentElement<IconType> | undefined;\r\n    label?: string | undefined;\r\n    mode?: \"primary\" | \"secondary\" | \"ghost\" | undefined;\r\n    size?: \"small\" | \"medium\" | \"large\" | undefined;\r\n} & React.RefAttributes<HTMLButtonElement>>;\r\n"}}
