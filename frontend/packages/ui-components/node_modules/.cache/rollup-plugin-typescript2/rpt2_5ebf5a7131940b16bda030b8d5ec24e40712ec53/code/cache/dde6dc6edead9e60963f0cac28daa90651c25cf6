{"code":"import * as DropdownMenu from '@radix-ui/react-dropdown-menu';\r\nimport React from 'react';\r\nimport styled from 'styled-components';\r\nexport const Dropdown = ({ open, onOpenChange, trigger, listItems, disabled = false, ...rest }) => {\r\n    return (React.createElement(DropdownMenu.Root, { open: open, onOpenChange: onOpenChange },\r\n        React.createElement(DropdownMenu.Trigger, { \"data-testid\": \"dropdown-trigger\", asChild: true, disabled: disabled }, trigger),\r\n        React.createElement(StyledContent, Object.assign({}, rest),\r\n            React.createElement(DropdownMenu.Group, { className: \"space-y-0.5\" }, listItems?.map((li, index) => (React.createElement(StyledItem, { key: index, onSelect: li.callback }, li.component)))),\r\n            React.createElement(DropdownMenu.Separator, null))));\r\n};\r\nconst StyledContent = styled(DropdownMenu.Content).attrs({\r\n    className: 'bg-ui-0 rounded-lg p-2 shadow-xl',\r\n}) ``;\r\nconst StyledItem = styled(DropdownMenu.Item).attrs({\r\n    className: 'rounded-xl focus-visible:outline-primary',\r\n}) ``;\r\n//# sourceMappingURL=dropdown.js.map","references":["/root/repo/chainlink-spring-hackathon/frontend/node_modules/@radix-ui/react-dropdown-menu/dist/index.d.ts","/root/repo/chainlink-spring-hackathon/frontend/node_modules/@types/react/index.d.ts","/root/repo/chainlink-spring-hackathon/frontend/node_modules/@types/styled-components/index.d.ts"],"map":"{\"version\":3,\"file\":\"dropdown.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../src/components/dropdown/dropdown.tsx\"],\"names\":[],\"mappings\":\"AAAA,OAAO,KAAK,YAAY,MAAM,+BAA+B,CAAC;AAC9D,OAAO,KAAK,MAAM,OAAO,CAAC;AAC1B,OAAO,MAAM,MAAM,mBAAmB,CAAC;AAiDvC,MAAM,CAAC,MAAM,QAAQ,GAA4B,CAAC,EAChD,IAAI,EACJ,YAAY,EACZ,OAAO,EACP,SAAS,EACT,QAAQ,GAAG,KAAK,EAChB,GAAG,IAAI,EACO,EAAE,EAAE;IAClB,OAAO,CACL,oBAAC,YAAY,CAAC,IAAI,IAAC,IAAI,EAAE,IAAI,EAAE,YAAY,EAAE,YAAY;QACvD,oBAAC,YAAY,CAAC,OAAO,mBACP,kBAAkB,EAC9B,OAAO,QACP,QAAQ,EAAE,QAAQ,IAEjB,OAAO,CACa;QAEvB,oBAAC,aAAa,oBAAK,IAAI;YACrB,oBAAC,YAAY,CAAC,KAAK,IAAC,SAAS,EAAC,aAAa,IACxC,SAAS,EAAE,GAAG,CAAC,CAAC,EAAE,EAAE,KAAK,EAAE,EAAE,CAAC,CAC7B,oBAAC,UAAU,IAAC,GAAG,EAAE,KAAK,EAAE,QAAQ,EAAE,EAAE,CAAC,QAAQ,IAC1C,EAAE,CAAC,SAAS,CACF,CACd,CAAC,CACiB;YACrB,oBAAC,YAAY,CAAC,SAAS,OAAG,CACZ,CACE,CACrB,CAAC;AACJ,CAAC,CAAC;AAEF,MAAM,aAAa,GAAG,MAAM,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC,KAAK,CAAC;IACvD,SAAS,EAAE,kCAAwD;CACpE,CAAC,CAAA,EAAE,CAAC;AAEL,MAAM,UAAU,GAAG,MAAM,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC;IACjD,SAAS,EAAE,0CAA0C;CACtD,CAAC,CAAA,EAAE,CAAC\"}","dts":{"name":"/root/repo/chainlink-spring-hackathon/frontend/packages/ui-components/components/dropdown/dropdown.d.ts","writeByteOrderMark":false,"text":"import * as DropdownMenu from '@radix-ui/react-dropdown-menu';\r\nimport React from 'react';\r\nexport declare type ListItemProps = {\r\n    /**\r\n     * The components to render as list item. Typically, a <ListItem /> component.\r\n     */\r\n    component: React.ReactNode;\r\n    /**\r\n     * The function that will be called when this list item is selected (via\r\n     * keyboard, mouse, etc).\r\n     */\r\n    callback?: (event: Event) => void;\r\n};\r\nexport declare type CustomDropdownContentProps = Omit<DropdownMenu.DropdownMenuContentProps, 'asChild' | '__scopeDropdownMenu'>;\r\nexport declare type DropdownProps = CustomDropdownContentProps & {\r\n    /**\r\n     * The controlled open state of the dropdown. Must be used in conjunction with onOpenChange.\r\n     */\r\n    open?: boolean;\r\n    /**\r\n     * Event handler called when the open state of the dropdown changes.\r\n     */\r\n    onOpenChange?: (open: boolean) => void;\r\n    /**\r\n     * Element that triggers the opening state of the dropdown menu.\r\n     */\r\n    trigger: React.ReactNode;\r\n    /**\r\n     * The items inside the open dropdown menu.\r\n     */\r\n    listItems: ListItemProps[];\r\n    disabled?: boolean;\r\n};\r\nexport declare const Dropdown: React.FC<DropdownProps>;\r\n"}}
