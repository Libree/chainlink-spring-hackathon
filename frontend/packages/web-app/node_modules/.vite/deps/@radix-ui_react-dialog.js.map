{
  "version": 3,
  "sources": ["../../../../../node_modules/@radix-ui/react-dialog/node_modules/@radix-ui/react-primitive/dist/packages/react/primitive/src/Primitive.tsx", "../../../../../node_modules/@radix-ui/react-portal/node_modules/@radix-ui/react-primitive/dist/packages/react/primitive/src/Primitive.tsx", "../../../../../node_modules/@radix-ui/react-portal/dist/packages/react/portal/src/Portal.tsx", "../../../../../node_modules/@radix-ui/react-focus-scope/node_modules/@radix-ui/react-primitive/dist/packages/react/primitive/src/Primitive.tsx", "../../../../../node_modules/@radix-ui/react-focus-scope/dist/packages/react/focus-scope/src/FocusScope.tsx", "../../../../../node_modules/@radix-ui/react-dismissable-layer/node_modules/@radix-ui/react-primitive/dist/packages/react/primitive/src/Primitive.tsx", "../../../../../node_modules/@radix-ui/react-dismissable-layer/dist/packages/react/dismissable-layer/src/DismissableLayer.tsx", "../../../../../node_modules/@radix-ui/react-dialog/node_modules/@radix-ui/react-id/dist/packages/react/id/src/id.tsx", "../../../../../node_modules/@radix-ui/react-dialog/dist/packages/react/dialog/src/Dialog.tsx"],
  "sourcesContent": ["import * as React from 'react';\nimport { Slot } from '@radix-ui/react-slot';\n\nconst NODES = [\n  'a',\n  'button',\n  'div',\n  'h2',\n  'h3',\n  'img',\n  'li',\n  'nav',\n  'p',\n  'span',\n  'svg',\n  'ul',\n] as const;\n\n// Temporary while we await merge of this fix:\n// https://github.com/DefinitelyTyped/DefinitelyTyped/pull/55396\n// prettier-ignore\ntype PropsWithoutRef<P> = P extends any ? ('ref' extends keyof P ? Pick<P, Exclude<keyof P, 'ref'>> : P) : P;\ntype ComponentPropsWithoutRef<T extends React.ElementType> = PropsWithoutRef<\n  React.ComponentProps<T>\n>;\n\ntype Primitives = { [E in typeof NODES[number]]: PrimitiveForwardRefComponent<E> };\ntype PrimitivePropsWithRef<E extends React.ElementType> = React.ComponentPropsWithRef<E> & {\n  asChild?: boolean;\n};\n\ninterface PrimitiveForwardRefComponent<E extends React.ElementType>\n  extends React.ForwardRefExoticComponent<PrimitivePropsWithRef<E>> {}\n\n/* -------------------------------------------------------------------------------------------------\n * Primitive\n * -----------------------------------------------------------------------------------------------*/\n\nconst Primitive = NODES.reduce(\n  (primitive, node) => ({\n    ...primitive,\n    [node]: React.forwardRef((props: PrimitivePropsWithRef<typeof node>, forwardedRef: any) => {\n      const { asChild, ...primitiveProps } = props;\n      const Comp: any = asChild ? Slot : node;\n\n      React.useEffect(() => {\n        (window as any)[Symbol.for('radix-ui')] = true;\n      }, []);\n\n      if ((props as any).as) console.error(AS_ERROR);\n      return <Comp {...primitiveProps} ref={forwardedRef} />;\n    }),\n  }),\n  {} as Primitives\n);\n\n/* -----------------------------------------------------------------------------------------------*/\n\nconst AS_ERROR = `Warning: The \\`as\\` prop has been removed in favour of \\`asChild\\`. For details, see https://radix-ui.com/docs/primitives/overview/styling#changing-the-rendered-element`;\n\nconst Root = Primitive;\n\nexport {\n  Primitive,\n  //\n  Root,\n};\nexport type { ComponentPropsWithoutRef, PrimitivePropsWithRef };\n", "import * as React from 'react';\nimport { Slot } from '@radix-ui/react-slot';\n\nconst NODES = [\n  'a',\n  'button',\n  'div',\n  'h2',\n  'h3',\n  'img',\n  'li',\n  'nav',\n  'p',\n  'span',\n  'svg',\n  'ul',\n] as const;\n\n// Temporary while we await merge of this fix:\n// https://github.com/DefinitelyTyped/DefinitelyTyped/pull/55396\n// prettier-ignore\ntype PropsWithoutRef<P> = P extends any ? ('ref' extends keyof P ? Pick<P, Exclude<keyof P, 'ref'>> : P) : P;\ntype ComponentPropsWithoutRef<T extends React.ElementType> = PropsWithoutRef<\n  React.ComponentProps<T>\n>;\n\ntype Primitives = { [E in typeof NODES[number]]: PrimitiveForwardRefComponent<E> };\ntype PrimitivePropsWithRef<E extends React.ElementType> = React.ComponentPropsWithRef<E> & {\n  asChild?: boolean;\n};\n\ninterface PrimitiveForwardRefComponent<E extends React.ElementType>\n  extends React.ForwardRefExoticComponent<PrimitivePropsWithRef<E>> {}\n\n/* -------------------------------------------------------------------------------------------------\n * Primitive\n * -----------------------------------------------------------------------------------------------*/\n\nconst Primitive = NODES.reduce(\n  (primitive, node) => ({\n    ...primitive,\n    [node]: React.forwardRef((props: PrimitivePropsWithRef<typeof node>, forwardedRef: any) => {\n      const { asChild, ...primitiveProps } = props;\n      const Comp: any = asChild ? Slot : node;\n\n      React.useEffect(() => {\n        (window as any)[Symbol.for('radix-ui')] = true;\n      }, []);\n\n      if ((props as any).as) console.error(AS_ERROR);\n      return <Comp {...primitiveProps} ref={forwardedRef} />;\n    }),\n  }),\n  {} as Primitives\n);\n\n/* -----------------------------------------------------------------------------------------------*/\n\nconst AS_ERROR = `Warning: The \\`as\\` prop has been removed in favour of \\`asChild\\`. For details, see https://radix-ui.com/docs/primitives/overview/styling#changing-the-rendered-element`;\n\nconst Root = Primitive;\n\nexport {\n  Primitive,\n  //\n  Root,\n};\nexport type { ComponentPropsWithoutRef, PrimitivePropsWithRef };\n", "import * as React from 'react';\nimport ReactDOM from 'react-dom';\nimport { useLayoutEffect } from '@radix-ui/react-use-layout-effect';\nimport { Primitive } from '@radix-ui/react-primitive';\n\nimport type * as Radix from '@radix-ui/react-primitive';\n\nconst MAX_Z_INDEX = 2147483647;\n\n/* -------------------------------------------------------------------------------------------------\n * Portal\n * -----------------------------------------------------------------------------------------------*/\n\nconst PORTAL_NAME = 'Portal';\n\ntype PortalElement = React.ElementRef<typeof Primitive.div>;\ntype PrimitiveDivProps = Radix.ComponentPropsWithoutRef<typeof Primitive.div>;\ninterface PortalProps extends PrimitiveDivProps {\n  containerRef?: React.RefObject<HTMLElement>;\n}\n\nconst Portal = React.forwardRef<PortalElement, PortalProps>((props, forwardedRef) => {\n  const { containerRef, style, ...portalProps } = props;\n  const hostElement = containerRef?.current ?? globalThis?.document?.body;\n  const [, forceUpdate] = React.useState({});\n\n  /**\n   * containerRef.current won't be set on first render, so we force a re-render.\n   * Because we do this in `useLayoutEffect`, we still avoid a flash.\n   */\n  useLayoutEffect(() => {\n    forceUpdate({});\n  }, []);\n\n  if (hostElement) {\n    return ReactDOM.createPortal(\n      <Primitive.div\n        data-radix-portal=\"\"\n        {...portalProps}\n        ref={forwardedRef}\n        style={\n          /**\n           * If the Portal is injected in `body`, we assume we want whatever is portalled\n           * to appear on top of everything. Ideally this would be handled by making sure the\n           * app root creates a new stacking context, however this is quite hard to automate.\n           * For this reason, we have opted for setting the max z-index on the portal itself.\n           */\n          hostElement === document.body\n            ? {\n                position: 'absolute',\n                top: 0,\n                left: 0,\n                zIndex: MAX_Z_INDEX,\n                ...style,\n              }\n            : undefined\n        }\n      />,\n      hostElement\n    );\n  }\n\n  // bail out of ssr\n  return null;\n});\n\nPortal.displayName = PORTAL_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * UnstablePortal\n * -----------------------------------------------------------------------------------------------*/\n\nconst UNSTABLE_PORTAL_NAME = 'Portal';\n\ntype UnstablePortalElement = React.ElementRef<typeof Primitive.div>;\ninterface UnstablePortalProps extends PrimitiveDivProps {\n  container?: HTMLElement | null;\n}\n\nconst UnstablePortal = React.forwardRef<UnstablePortalElement, UnstablePortalProps>(\n  (props, forwardedRef) => {\n    const { container = globalThis?.document?.body, ...portalProps } = props;\n    return container\n      ? ReactDOM.createPortal(<Primitive.div {...portalProps} ref={forwardedRef} />, container)\n      : null;\n  }\n);\n\nUnstablePortal.displayName = UNSTABLE_PORTAL_NAME;\n\n/* -----------------------------------------------------------------------------------------------*/\n\nconst Root = Portal;\n\nexport {\n  Portal,\n  UnstablePortal,\n  //\n  Root,\n};\nexport type { PortalProps, UnstablePortalProps };\n", "import * as React from 'react';\nimport { Slot } from '@radix-ui/react-slot';\n\nconst NODES = [\n  'a',\n  'button',\n  'div',\n  'h2',\n  'h3',\n  'img',\n  'li',\n  'nav',\n  'p',\n  'span',\n  'svg',\n  'ul',\n] as const;\n\n// Temporary while we await merge of this fix:\n// https://github.com/DefinitelyTyped/DefinitelyTyped/pull/55396\n// prettier-ignore\ntype PropsWithoutRef<P> = P extends any ? ('ref' extends keyof P ? Pick<P, Exclude<keyof P, 'ref'>> : P) : P;\ntype ComponentPropsWithoutRef<T extends React.ElementType> = PropsWithoutRef<\n  React.ComponentProps<T>\n>;\n\ntype Primitives = { [E in typeof NODES[number]]: PrimitiveForwardRefComponent<E> };\ntype PrimitivePropsWithRef<E extends React.ElementType> = React.ComponentPropsWithRef<E> & {\n  asChild?: boolean;\n};\n\ninterface PrimitiveForwardRefComponent<E extends React.ElementType>\n  extends React.ForwardRefExoticComponent<PrimitivePropsWithRef<E>> {}\n\n/* -------------------------------------------------------------------------------------------------\n * Primitive\n * -----------------------------------------------------------------------------------------------*/\n\nconst Primitive = NODES.reduce(\n  (primitive, node) => ({\n    ...primitive,\n    [node]: React.forwardRef((props: PrimitivePropsWithRef<typeof node>, forwardedRef: any) => {\n      const { asChild, ...primitiveProps } = props;\n      const Comp: any = asChild ? Slot : node;\n\n      React.useEffect(() => {\n        (window as any)[Symbol.for('radix-ui')] = true;\n      }, []);\n\n      if ((props as any).as) console.error(AS_ERROR);\n      return <Comp {...primitiveProps} ref={forwardedRef} />;\n    }),\n  }),\n  {} as Primitives\n);\n\n/* -----------------------------------------------------------------------------------------------*/\n\nconst AS_ERROR = `Warning: The \\`as\\` prop has been removed in favour of \\`asChild\\`. For details, see https://radix-ui.com/docs/primitives/overview/styling#changing-the-rendered-element`;\n\nconst Root = Primitive;\n\nexport {\n  Primitive,\n  //\n  Root,\n};\nexport type { ComponentPropsWithoutRef, PrimitivePropsWithRef };\n", "import * as React from 'react';\nimport { useComposedRefs } from '@radix-ui/react-compose-refs';\nimport { Primitive } from '@radix-ui/react-primitive';\nimport { useCallbackRef } from '@radix-ui/react-use-callback-ref';\n\nimport type * as Radix from '@radix-ui/react-primitive';\n\nconst AUTOFOCUS_ON_MOUNT = 'focusScope.autoFocusOnMount';\nconst AUTOFOCUS_ON_UNMOUNT = 'focusScope.autoFocusOnUnmount';\nconst EVENT_OPTIONS = { bubbles: false, cancelable: true };\n\ntype FocusableTarget = HTMLElement | { focus(): void };\n\n/* -------------------------------------------------------------------------------------------------\n * FocusScope\n * -----------------------------------------------------------------------------------------------*/\n\nconst FOCUS_SCOPE_NAME = 'FocusScope';\n\ntype FocusScopeElement = React.ElementRef<typeof Primitive.div>;\ntype PrimitiveDivProps = Radix.ComponentPropsWithoutRef<typeof Primitive.div>;\ninterface FocusScopeProps extends PrimitiveDivProps {\n  /**\n   * When `true`, tabbing from last item will focus first tabbable\n   * and shift+tab from first item will focus last tababble.\n   * @defaultValue false\n   */\n  loop?: boolean;\n\n  /**\n   * When `true`, focus cannot escape the focus scope via keyboard,\n   * pointer, or a programmatic focus.\n   * @defaultValue false\n   */\n  trapped?: boolean;\n\n  /**\n   * Event handler called when auto-focusing on mount.\n   * Can be prevented.\n   */\n  onMountAutoFocus?: (event: Event) => void;\n\n  /**\n   * Event handler called when auto-focusing on unmount.\n   * Can be prevented.\n   */\n  onUnmountAutoFocus?: (event: Event) => void;\n}\n\nconst FocusScope = React.forwardRef<FocusScopeElement, FocusScopeProps>((props, forwardedRef) => {\n  const {\n    loop = false,\n    trapped = false,\n    onMountAutoFocus: onMountAutoFocusProp,\n    onUnmountAutoFocus: onUnmountAutoFocusProp,\n    ...scopeProps\n  } = props;\n  const [container, setContainer] = React.useState<HTMLElement | null>(null);\n  const onMountAutoFocus = useCallbackRef(onMountAutoFocusProp);\n  const onUnmountAutoFocus = useCallbackRef(onUnmountAutoFocusProp);\n  const lastFocusedElementRef = React.useRef<HTMLElement | null>(null);\n  const composedRefs = useComposedRefs(forwardedRef, (node) => setContainer(node));\n\n  const focusScope = React.useRef({\n    paused: false,\n    pause() {\n      this.paused = true;\n    },\n    resume() {\n      this.paused = false;\n    },\n  }).current;\n\n  // Takes care of trapping focus if focus is moved outside programmatically for example\n  React.useEffect(() => {\n    if (trapped) {\n      function handleFocusIn(event: FocusEvent) {\n        if (focusScope.paused || !container) return;\n        const target = event.target as HTMLElement | null;\n        if (container.contains(target)) {\n          lastFocusedElementRef.current = target;\n        } else {\n          focus(lastFocusedElementRef.current, { select: true });\n        }\n      }\n\n      function handleFocusOut(event: FocusEvent) {\n        if (focusScope.paused || !container) return;\n        if (!container.contains(event.relatedTarget as HTMLElement | null)) {\n          focus(lastFocusedElementRef.current, { select: true });\n        }\n      }\n\n      document.addEventListener('focusin', handleFocusIn);\n      document.addEventListener('focusout', handleFocusOut);\n      return () => {\n        document.removeEventListener('focusin', handleFocusIn);\n        document.removeEventListener('focusout', handleFocusOut);\n      };\n    }\n  }, [trapped, container, focusScope.paused]);\n\n  React.useEffect(() => {\n    if (container) {\n      focusScopesStack.add(focusScope);\n      const previouslyFocusedElement = document.activeElement as HTMLElement | null;\n      const hasFocusedCandidate = container.contains(previouslyFocusedElement);\n\n      if (!hasFocusedCandidate) {\n        const mountEvent = new Event(AUTOFOCUS_ON_MOUNT, EVENT_OPTIONS);\n        container.addEventListener(AUTOFOCUS_ON_MOUNT, onMountAutoFocus);\n        container.dispatchEvent(mountEvent);\n        if (!mountEvent.defaultPrevented) {\n          focusFirst(removeLinks(getTabbableCandidates(container)), { select: true });\n          if (document.activeElement === previouslyFocusedElement) {\n            focus(container);\n          }\n        }\n      }\n\n      return () => {\n        container.removeEventListener(AUTOFOCUS_ON_MOUNT, onMountAutoFocus);\n\n        // We hit a react bug (fixed in v17) with focusing in unmount.\n        // We need to delay the focus a little to get around it for now.\n        // See: https://github.com/facebook/react/issues/17894\n        setTimeout(() => {\n          const unmountEvent = new Event(AUTOFOCUS_ON_UNMOUNT, EVENT_OPTIONS);\n          container.addEventListener(AUTOFOCUS_ON_UNMOUNT, onUnmountAutoFocus);\n          container.dispatchEvent(unmountEvent);\n          if (!unmountEvent.defaultPrevented) {\n            focus(previouslyFocusedElement ?? document.body, { select: true });\n          }\n          // we need to remove the listener after we `dispatchEvent`\n          container.removeEventListener(AUTOFOCUS_ON_UNMOUNT, onUnmountAutoFocus);\n\n          focusScopesStack.remove(focusScope);\n        }, 0);\n      };\n    }\n  }, [container, onMountAutoFocus, onUnmountAutoFocus, focusScope]);\n\n  // Takes care of looping focus (when tabbing whilst at the edges)\n  const handleKeyDown = React.useCallback(\n    (event: React.KeyboardEvent) => {\n      if (!loop && !trapped) return;\n      if (focusScope.paused) return;\n\n      const isTabKey = event.key === 'Tab' && !event.altKey && !event.ctrlKey && !event.metaKey;\n      const focusedElement = document.activeElement as HTMLElement | null;\n\n      if (isTabKey && focusedElement) {\n        const container = event.currentTarget as HTMLElement;\n        const [first, last] = getTabbableEdges(container);\n        const hasTabbableElementsInside = first && last;\n\n        // we can only wrap focus if we have tabbable edges\n        if (!hasTabbableElementsInside) {\n          if (focusedElement === container) event.preventDefault();\n        } else {\n          if (!event.shiftKey && focusedElement === last) {\n            event.preventDefault();\n            if (loop) focus(first, { select: true });\n          } else if (event.shiftKey && focusedElement === first) {\n            event.preventDefault();\n            if (loop) focus(last, { select: true });\n          }\n        }\n      }\n    },\n    [loop, trapped, focusScope.paused]\n  );\n\n  return (\n    <Primitive.div tabIndex={-1} {...scopeProps} ref={composedRefs} onKeyDown={handleKeyDown} />\n  );\n});\n\nFocusScope.displayName = FOCUS_SCOPE_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * Utils\n * -----------------------------------------------------------------------------------------------*/\n\n/**\n * Attempts focusing the first element in a list of candidates.\n * Stops when focus has actually moved.\n */\nfunction focusFirst(candidates: HTMLElement[], { select = false } = {}) {\n  const previouslyFocusedElement = document.activeElement;\n  for (const candidate of candidates) {\n    focus(candidate, { select });\n    if (document.activeElement !== previouslyFocusedElement) return;\n  }\n}\n\n/**\n * Returns the first and last tabbable elements inside a container.\n */\nfunction getTabbableEdges(container: HTMLElement) {\n  const candidates = getTabbableCandidates(container);\n  const first = findVisible(candidates, container);\n  const last = findVisible(candidates.reverse(), container);\n  return [first, last] as const;\n}\n\n/**\n * Returns a list of potential tabbable candidates.\n *\n * NOTE: This is only a close approximation. For example it doesn't take into account cases like when\n * elements are not visible. This cannot be worked out easily by just reading a property, but rather\n * necessitate runtime knowledge (computed styles, etc). We deal with these cases separately.\n *\n * See: https://developer.mozilla.org/en-US/docs/Web/API/TreeWalker\n * Credit: https://github.com/discord/focus-layers/blob/master/src/util/wrapFocus.tsx#L1\n */\nfunction getTabbableCandidates(container: HTMLElement) {\n  const nodes: HTMLElement[] = [];\n  const walker = document.createTreeWalker(container, NodeFilter.SHOW_ELEMENT, {\n    acceptNode: (node: any) => {\n      const isHiddenInput = node.tagName === 'INPUT' && node.type === 'hidden';\n      if (node.disabled || node.hidden || isHiddenInput) return NodeFilter.FILTER_SKIP;\n      // `.tabIndex` is not the same as the `tabindex` attribute. It works on the\n      // runtime's understanding of tabbability, so this automatically accounts\n      // for any kind of element that could be tabbed to.\n      return node.tabIndex >= 0 ? NodeFilter.FILTER_ACCEPT : NodeFilter.FILTER_SKIP;\n    },\n  });\n  while (walker.nextNode()) nodes.push(walker.currentNode as HTMLElement);\n  // we do not take into account the order of nodes with positive `tabIndex` as it\n  // hinders accessibility to have tab order different from visual order.\n  return nodes;\n}\n\n/**\n * Returns the first visible element in a list.\n * NOTE: Only checks visibility up to the `container`.\n */\nfunction findVisible(elements: HTMLElement[], container: HTMLElement) {\n  for (const element of elements) {\n    // we stop checking if it's hidden at the `container` level (excluding)\n    if (!isHidden(element, { upTo: container })) return element;\n  }\n}\n\nfunction isHidden(node: HTMLElement, { upTo }: { upTo?: HTMLElement }) {\n  if (getComputedStyle(node).visibility === 'hidden') return true;\n  while (node) {\n    // we stop at `upTo` (excluding it)\n    if (upTo !== undefined && node === upTo) return false;\n    if (getComputedStyle(node).display === 'none') return true;\n    node = node.parentElement as HTMLElement;\n  }\n  return false;\n}\n\nfunction isSelectableInput(element: any): element is FocusableTarget & { select: () => void } {\n  return element instanceof HTMLInputElement && 'select' in element;\n}\n\nfunction focus(element?: FocusableTarget | null, { select = false } = {}) {\n  // only focus if that element is focusable\n  if (element && element.focus) {\n    const previouslyFocusedElement = document.activeElement;\n    // NOTE: we prevent scrolling on focus, to minimize jarring transitions for users\n    element.focus({ preventScroll: true });\n    // only select if its not the same element, it supports selection and we need to select\n    if (element !== previouslyFocusedElement && isSelectableInput(element) && select)\n      element.select();\n  }\n}\n\n/* -------------------------------------------------------------------------------------------------\n * FocusScope stack\n * -----------------------------------------------------------------------------------------------*/\n\ntype FocusScopeAPI = { paused: boolean; pause(): void; resume(): void };\nconst focusScopesStack = createFocusScopesStack();\n\nfunction createFocusScopesStack() {\n  /** A stack of focus scopes, with the active one at the top */\n  let stack: FocusScopeAPI[] = [];\n\n  return {\n    add(focusScope: FocusScopeAPI) {\n      // pause the currently active focus scope (at the top of the stack)\n      const activeFocusScope = stack[0];\n      if (focusScope !== activeFocusScope) {\n        activeFocusScope?.pause();\n      }\n      // remove in case it already exists (because we'll re-add it at the top of the stack)\n      stack = arrayRemove(stack, focusScope);\n      stack.unshift(focusScope);\n    },\n\n    remove(focusScope: FocusScopeAPI) {\n      stack = arrayRemove(stack, focusScope);\n      stack[0]?.resume();\n    },\n  };\n}\n\nfunction arrayRemove<T>(array: T[], item: T) {\n  const updatedArray = [...array];\n  const index = updatedArray.indexOf(item);\n  if (index !== -1) {\n    updatedArray.splice(index, 1);\n  }\n  return updatedArray;\n}\n\nfunction removeLinks(items: HTMLElement[]) {\n  return items.filter((item) => item.tagName !== 'A');\n}\n\nconst Root = FocusScope;\n\nexport {\n  FocusScope,\n  //\n  Root,\n};\nexport type { FocusScopeProps };\n", "import * as React from 'react';\nimport { Slot } from '@radix-ui/react-slot';\n\nconst NODES = [\n  'a',\n  'button',\n  'div',\n  'h2',\n  'h3',\n  'img',\n  'li',\n  'nav',\n  'p',\n  'span',\n  'svg',\n  'ul',\n] as const;\n\n// Temporary while we await merge of this fix:\n// https://github.com/DefinitelyTyped/DefinitelyTyped/pull/55396\n// prettier-ignore\ntype PropsWithoutRef<P> = P extends any ? ('ref' extends keyof P ? Pick<P, Exclude<keyof P, 'ref'>> : P) : P;\ntype ComponentPropsWithoutRef<T extends React.ElementType> = PropsWithoutRef<\n  React.ComponentProps<T>\n>;\n\ntype Primitives = { [E in typeof NODES[number]]: PrimitiveForwardRefComponent<E> };\ntype PrimitivePropsWithRef<E extends React.ElementType> = React.ComponentPropsWithRef<E> & {\n  asChild?: boolean;\n};\n\ninterface PrimitiveForwardRefComponent<E extends React.ElementType>\n  extends React.ForwardRefExoticComponent<PrimitivePropsWithRef<E>> {}\n\n/* -------------------------------------------------------------------------------------------------\n * Primitive\n * -----------------------------------------------------------------------------------------------*/\n\nconst Primitive = NODES.reduce(\n  (primitive, node) => ({\n    ...primitive,\n    [node]: React.forwardRef((props: PrimitivePropsWithRef<typeof node>, forwardedRef: any) => {\n      const { asChild, ...primitiveProps } = props;\n      const Comp: any = asChild ? Slot : node;\n\n      React.useEffect(() => {\n        (window as any)[Symbol.for('radix-ui')] = true;\n      }, []);\n\n      if ((props as any).as) console.error(AS_ERROR);\n      return <Comp {...primitiveProps} ref={forwardedRef} />;\n    }),\n  }),\n  {} as Primitives\n);\n\n/* -----------------------------------------------------------------------------------------------*/\n\nconst AS_ERROR = `Warning: The \\`as\\` prop has been removed in favour of \\`asChild\\`. For details, see https://radix-ui.com/docs/primitives/overview/styling#changing-the-rendered-element`;\n\nconst Root = Primitive;\n\nexport {\n  Primitive,\n  //\n  Root,\n};\nexport type { ComponentPropsWithoutRef, PrimitivePropsWithRef };\n", "import * as React from 'react';\nimport { composeEventHandlers } from '@radix-ui/primitive';\nimport { Primitive } from '@radix-ui/react-primitive';\nimport { createContext } from '@radix-ui/react-context';\nimport { useBodyPointerEvents } from '@radix-ui/react-use-body-pointer-events';\nimport { useCallbackRef } from '@radix-ui/react-use-callback-ref';\nimport { useEscapeKeydown } from '@radix-ui/react-use-escape-keydown';\n\nimport type * as Radix from '@radix-ui/react-primitive';\n\n// We need to compute the total count of layers AND a running count of all layers\n// in order to find which layer is the deepest one.\n// This is use to only dismiss the deepest layer when using the escape key\n// because we bind the key listener to document so cannot take advantage of event.stopPropagation()\nconst [TotalLayerCountProvider, useTotalLayerCount] = createTotalLayerCount();\nconst [RunningLayerCountProvider, usePreviousRunningLayerCount] = createRunningLayerCount();\n\n// We need to compute the total count of layers which set `disableOutsidePointerEvents` to `true` AND\n// a running count of all the layers which set `disableOutsidePointerEvents` to `true` in order to determine\n// which layers should be dismissed when interacting outside.\n// (ie. all layers that do not have a child layer which sets `disableOutsidePointerEvents` to `true`)\nconst [\n  TotalLayerCountWithDisabledOutsidePointerEventsProvider,\n  useTotalLayerCountWithDisabledOutsidePointerEvents,\n] = createTotalLayerCount('TotalLayerCountWithDisabledOutsidePointerEventsProvider');\nconst [\n  RunningLayerCountWithDisabledOutsidePointerEventsProvider,\n  usePreviousRunningLayerCountWithDisabledOutsidePointerEvents,\n] = createRunningLayerCount('RunningLayerCountWithDisabledOutsidePointerEventsProvider');\n\n/* -------------------------------------------------------------------------------------------------\n * DismissableLayer\n * -----------------------------------------------------------------------------------------------*/\n\nconst DISMISSABLE_LAYER_NAME = 'DismissableLayer';\n\ntype DismissableLayerElement = DismissableLayerImplElement;\ninterface DismissableLayerProps extends DismissableLayerImplProps {}\n\nconst DismissableLayer = React.forwardRef<DismissableLayerElement, DismissableLayerProps>(\n  (props, forwardedRef) => {\n    const runningLayerCount = usePreviousRunningLayerCount();\n    const isRootLayer = runningLayerCount === 0;\n    const layer = <DismissableLayerImpl {...props} ref={forwardedRef} />;\n\n    // if it's the root layer, we wrap it with our necessary root providers\n    // (effectively we wrap the whole tree of nested layers)\n    return isRootLayer ? (\n      <TotalLayerCountProvider>\n        <TotalLayerCountWithDisabledOutsidePointerEventsProvider>\n          {layer}\n        </TotalLayerCountWithDisabledOutsidePointerEventsProvider>\n      </TotalLayerCountProvider>\n    ) : (\n      layer\n    );\n  }\n);\n\nDismissableLayer.displayName = DISMISSABLE_LAYER_NAME;\n\n/* -----------------------------------------------------------------------------------------------*/\n\ntype DismissableLayerImplElement = React.ElementRef<typeof Primitive.div>;\ntype PrimitiveDivProps = Radix.ComponentPropsWithoutRef<typeof Primitive.div>;\ninterface DismissableLayerImplProps extends PrimitiveDivProps {\n  /**\n   * When `true`, hover/focus/click interactions will be disabled on elements outside\n   * the `DismissableLayer`. Users will need to click twice on outside elements to\n   * interact with them: once to close the `DismissableLayer`, and again to trigger the element.\n   */\n  disableOutsidePointerEvents?: boolean;\n\n  /**\n   * Event handler called when the escape key is down.\n   * Can be prevented.\n   */\n  onEscapeKeyDown?: (event: KeyboardEvent) => void;\n\n  /**\n   * Event handler called when the a `pointerdown` event happens outside of the `DismissableLayer`.\n   * Can be prevented.\n   */\n  onPointerDownOutside?: (event: PointerDownOutsideEvent) => void;\n\n  /**\n   * Event handler called when the focus moves outside of the `DismissableLayer`.\n   * Can be prevented.\n   */\n  onFocusOutside?: (event: FocusOutsideEvent) => void;\n\n  /**\n   * Event handler called when an interaction happens outside the `DismissableLayer`.\n   * Specifically, when a `pointerdown` event happens outside or focus moves outside of it.\n   * Can be prevented.\n   */\n  onInteractOutside?: (event: PointerDownOutsideEvent | FocusOutsideEvent) => void;\n\n  /** Callback called when the `DismissableLayer` should be dismissed */\n  onDismiss?: () => void;\n}\n\nconst DismissableLayerImpl = React.forwardRef<\n  DismissableLayerImplElement,\n  DismissableLayerImplProps\n>((props, forwardedRef) => {\n  const {\n    disableOutsidePointerEvents = false,\n    onEscapeKeyDown,\n    onPointerDownOutside,\n    onFocusOutside,\n    onInteractOutside,\n    onDismiss,\n    ...layerProps\n  } = props;\n\n  const totalLayerCount = useTotalLayerCount();\n  const prevRunningLayerCount = usePreviousRunningLayerCount();\n  const runningLayerCount = prevRunningLayerCount + 1;\n  const isDeepestLayer = runningLayerCount === totalLayerCount;\n\n  const totalLayerCountWithDisabledOutsidePointerEvents =\n    useTotalLayerCountWithDisabledOutsidePointerEvents(disableOutsidePointerEvents);\n  const prevRunningLayerCountWithDisabledOutsidePointerEvents =\n    usePreviousRunningLayerCountWithDisabledOutsidePointerEvents();\n  const runningLayerCountWithDisabledOutsidePointerEvents =\n    prevRunningLayerCountWithDisabledOutsidePointerEvents + (disableOutsidePointerEvents ? 1 : 0);\n  const containsChildLayerWithDisabledOutsidePointerEvents =\n    runningLayerCountWithDisabledOutsidePointerEvents <\n    totalLayerCountWithDisabledOutsidePointerEvents;\n\n  // Disable pointer-events on `document.body` when at least one layer is disabling outside pointer events\n  useBodyPointerEvents({ disabled: disableOutsidePointerEvents });\n\n  // Dismiss on escape\n  useEscapeKeydown((event) => {\n    // Only dismiss if it's the deepest layer. his is effectively mimicking\n    // event.stopPropagation from the layer with disabled outside pointer events.\n    if (isDeepestLayer) {\n      onEscapeKeyDown?.(event);\n      if (!event.defaultPrevented) {\n        onDismiss?.();\n      }\n    }\n  });\n\n  // Dismiss on pointer down outside\n  const { onPointerDownCapture: handlePointerDownCapture } = usePointerDownOutside((event) => {\n    // Only dismiss if there's no deeper layer which disabled pointer events outside itself\n    if (!containsChildLayerWithDisabledOutsidePointerEvents) {\n      onPointerDownOutside?.(event);\n      onInteractOutside?.(event);\n      if (!event.defaultPrevented) {\n        onDismiss?.();\n      }\n    }\n  });\n\n  // Dismiss on focus outside\n  const { onBlurCapture: handleBlurCapture, onFocusCapture: handleFocusCapture } = useFocusOutside(\n    (event) => {\n      onFocusOutside?.(event);\n      onInteractOutside?.(event);\n      if (!event.defaultPrevented) {\n        onDismiss?.();\n      }\n    }\n  );\n\n  // If we have disabled pointer events on body, we need to reset `pointerEvents: 'auto'`\n  // on some layers. This depends on which layers set `disableOutsidePointerEvents` to `true`.\n  //\n  // NOTE: it's important we set it on ALL layers that need it as we cannot simply\n  // set it on the deepest layer which sets `disableOutsidePointerEvents` to `true` and rely\n  // on inheritence. This is because layers may be rendered in different portals where\n  // inheritence wouldn't apply, so we need to set it explicity on its children too.\n  const isBodyPointerEventsDisabled = totalLayerCountWithDisabledOutsidePointerEvents > 0;\n  const shouldReEnablePointerEvents =\n    isBodyPointerEventsDisabled && !containsChildLayerWithDisabledOutsidePointerEvents;\n\n  return (\n    <RunningLayerCountProvider runningCount={runningLayerCount}>\n      <RunningLayerCountWithDisabledOutsidePointerEventsProvider\n        runningCount={runningLayerCountWithDisabledOutsidePointerEvents}\n      >\n        <Primitive.div\n          {...layerProps}\n          ref={forwardedRef}\n          style={{\n            pointerEvents: shouldReEnablePointerEvents ? 'auto' : undefined,\n            ...layerProps.style,\n          }}\n          onPointerDownCapture={composeEventHandlers(\n            props.onPointerDownCapture,\n            handlePointerDownCapture\n          )}\n          onBlurCapture={composeEventHandlers(props.onBlurCapture, handleBlurCapture)}\n          onFocusCapture={composeEventHandlers(props.onFocusCapture, handleFocusCapture)}\n        />\n      </RunningLayerCountWithDisabledOutsidePointerEventsProvider>\n    </RunningLayerCountProvider>\n  );\n});\n\n/* -------------------------------------------------------------------------------------------------\n * Utility hooks\n * -----------------------------------------------------------------------------------------------*/\n\nconst POINTER_DOWN_OUTSIDE = 'dismissableLayer.pointerDownOutside';\nconst FOCUS_OUTSIDE = 'dismissableLayer.focusOutside';\ntype PointerDownOutsideEvent = CustomEvent<{ originalEvent: PointerEvent }>;\ntype FocusOutsideEvent = CustomEvent<{ originalEvent: FocusEvent }>;\n\n/**\n * Sets up `pointerdown` listener which listens for events outside a react subtree.\n *\n * We use `pointerdown` rather than `pointerup` to mimic layer dismissing behaviour\n * present in OS which usually happens on `pointerdown`.\n *\n * Returns props to pass to the node we want to check for outside events.\n */\n\nfunction usePointerDownOutside(onPointerDownOutside?: (event: PointerDownOutsideEvent) => void) {\n  const handlePointerDownOutside = useCallbackRef(onPointerDownOutside) as EventListener;\n  const isPointerInsideReactTreeRef = React.useRef(false);\n\n  React.useEffect(() => {\n    const handlePointerDown = (event: PointerEvent) => {\n      const target = event.target;\n      if (target && !isPointerInsideReactTreeRef.current) {\n        const pointerDownOutsideEvent: PointerDownOutsideEvent = new CustomEvent(\n          POINTER_DOWN_OUTSIDE,\n          { bubbles: false, cancelable: true, detail: { originalEvent: event } }\n        );\n        target.addEventListener(POINTER_DOWN_OUTSIDE, handlePointerDownOutside, { once: true });\n        target.dispatchEvent(pointerDownOutsideEvent);\n      }\n      isPointerInsideReactTreeRef.current = false;\n    };\n    /**\n     * if this hook executes in a component that mounts via a `pointerdown` event, the event\n     * would bubble up to the document and trigger a `pointerDownOutside` event. We avoid\n     * this by delaying the event listener registration on the document.\n     * This is not React specific, but rather how the DOM works, ie:\n     * ```\n     * button.addEventListener('pointerdown', () => {\n     *   console.log('I will log');\n     *   document.addEventListener('pointerdown', () => {\n     *     console.log('I will also log');\n     *   })\n     * });\n     */\n    const timerId = window.setTimeout(() => {\n      document.addEventListener('pointerdown', handlePointerDown);\n    }, 0);\n    return () => {\n      window.clearTimeout(timerId);\n      document.removeEventListener('pointerdown', handlePointerDown);\n    };\n  }, [handlePointerDownOutside]);\n\n  return {\n    // ensures we check React component tree (not just DOM tree)\n    onPointerDownCapture: () => (isPointerInsideReactTreeRef.current = true),\n  };\n}\n\n/**\n * Listens for when focus happens outside a react subtree.\n * Returns props to pass to the root (node) of the subtree we want to check.\n */\n\nfunction useFocusOutside(onFocusOutside?: (event: FocusOutsideEvent) => void) {\n  const handleFocusOutside = useCallbackRef(onFocusOutside) as EventListener;\n  const isFocusInsideReactTreeRef = React.useRef(false);\n\n  React.useEffect(() => {\n    const handleFocus = (event: FocusEvent) => {\n      const target = event.target;\n      if (target && !isFocusInsideReactTreeRef.current) {\n        const focusOutsideEvent: FocusOutsideEvent = new CustomEvent(FOCUS_OUTSIDE, {\n          bubbles: false,\n          cancelable: true,\n          detail: { originalEvent: event },\n        });\n        target.addEventListener(FOCUS_OUTSIDE, handleFocusOutside, { once: true });\n        target.dispatchEvent(focusOutsideEvent);\n      }\n    };\n    document.addEventListener('focusin', handleFocus);\n    return () => document.removeEventListener('focusin', handleFocus);\n  }, [handleFocusOutside]);\n\n  return {\n    onFocusCapture: () => (isFocusInsideReactTreeRef.current = true),\n    onBlurCapture: () => (isFocusInsideReactTreeRef.current = false),\n  };\n}\n\n/* -------------------------------------------------------------------------------------------------\n * Layer counting utilities\n * -----------------------------------------------------------------------------------------------*/\n\nfunction createTotalLayerCount(displayName?: string) {\n  const [TotalLayerCountProviderImpl, useTotalLayerCountContext] = createContext(\n    'TotalLayerCount',\n    { total: 0, onTotalIncrease: () => {}, onTotalDecrease: () => {} }\n  );\n\n  const TotalLayerCountProvider: React.FC = ({ children }) => {\n    const [total, setTotal] = React.useState(0);\n    return (\n      <TotalLayerCountProviderImpl\n        total={total}\n        onTotalIncrease={React.useCallback(() => setTotal((n) => n + 1), [])}\n        onTotalDecrease={React.useCallback(() => setTotal((n) => n - 1), [])}\n      >\n        {children}\n      </TotalLayerCountProviderImpl>\n    );\n  };\n  if (displayName) {\n    TotalLayerCountProvider.displayName = displayName;\n  }\n\n  function useTotalLayerCount(counted = true) {\n    const { total, onTotalIncrease, onTotalDecrease } =\n      useTotalLayerCountContext('TotalLayerCountConsumer');\n\n    React.useLayoutEffect(() => {\n      if (counted) {\n        onTotalIncrease();\n        return () => onTotalDecrease();\n      }\n    }, [counted, onTotalIncrease, onTotalDecrease]);\n\n    return total;\n  }\n\n  return [TotalLayerCountProvider, useTotalLayerCount] as const;\n}\n\nfunction createRunningLayerCount(displayName?: string) {\n  const [RunningLayerCountProviderImp, useRunningLayerCount] = createContext('RunningLayerCount', {\n    count: 0,\n  });\n\n  const RunningLayerCountProvider: React.FC<{ runningCount: number }> = (props) => {\n    const { children, runningCount } = props;\n    return (\n      <RunningLayerCountProviderImp count={runningCount}>{children}</RunningLayerCountProviderImp>\n    );\n  };\n  if (displayName) {\n    RunningLayerCountProvider.displayName = displayName;\n  }\n\n  function usePreviousRunningLayerCount() {\n    const context = useRunningLayerCount('RunningLayerCountConsumer');\n    return context.count || 0;\n  }\n\n  return [RunningLayerCountProvider, usePreviousRunningLayerCount] as const;\n}\n\nconst Root = DismissableLayer;\n\nexport {\n  DismissableLayer,\n  //\n  Root,\n};\nexport type { DismissableLayerProps };\n", "import * as React from 'react';\nimport { useLayoutEffect } from '@radix-ui/react-use-layout-effect';\n\nconst useReactId = (React as any).useId || (() => undefined);\nlet count = 0;\n\nfunction useId(deterministicId?: string): string {\n  const [id, setId] = React.useState<string | undefined>(useReactId());\n  // React versions older than 18 will have client-side ids only.\n  useLayoutEffect(() => {\n    if (!deterministicId) setId((reactId) => reactId ?? String(count++));\n  }, [deterministicId]);\n  return deterministicId || (id ? `radix-${id}` : '');\n}\n\nexport { useId };\n", "import * as React from 'react';\nimport { composeEventHandlers } from '@radix-ui/primitive';\nimport { useComposedRefs } from '@radix-ui/react-compose-refs';\nimport { createContext, createContextScope } from '@radix-ui/react-context';\nimport { useId } from '@radix-ui/react-id';\nimport { useControllableState } from '@radix-ui/react-use-controllable-state';\nimport { DismissableLayer } from '@radix-ui/react-dismissable-layer';\nimport { FocusScope } from '@radix-ui/react-focus-scope';\nimport { UnstablePortal } from '@radix-ui/react-portal';\nimport { Presence } from '@radix-ui/react-presence';\nimport { Primitive } from '@radix-ui/react-primitive';\nimport { useFocusGuards } from '@radix-ui/react-focus-guards';\nimport { RemoveScroll } from 'react-remove-scroll';\nimport { hideOthers } from 'aria-hidden';\nimport { Slot } from '@radix-ui/react-slot';\n\nimport type * as Radix from '@radix-ui/react-primitive';\nimport type { Scope } from '@radix-ui/react-context';\n\n/* -------------------------------------------------------------------------------------------------\n * Dialog\n * -----------------------------------------------------------------------------------------------*/\n\nconst DIALOG_NAME = 'Dialog';\n\ntype ScopedProps<P> = P & { __scopeDialog?: Scope };\nconst [createDialogContext, createDialogScope] = createContextScope(DIALOG_NAME);\n\ntype DialogContextValue = {\n  triggerRef: React.RefObject<HTMLButtonElement>;\n  contentId: string;\n  titleId: string;\n  descriptionId: string;\n  open: boolean;\n  onOpenChange(open: boolean): void;\n  onOpenToggle(): void;\n  modal: boolean;\n  allowPinchZoom: DialogProps['allowPinchZoom'];\n};\n\nconst [DialogProvider, useDialogContext] = createDialogContext<DialogContextValue>(DIALOG_NAME);\n\ntype RemoveScrollProps = React.ComponentProps<typeof RemoveScroll>;\ninterface DialogProps {\n  open?: boolean;\n  defaultOpen?: boolean;\n  onOpenChange?(open: boolean): void;\n  modal?: boolean;\n  /**\n   * @see https://github.com/theKashey/react-remove-scroll#usage\n   */\n  allowPinchZoom?: RemoveScrollProps['allowPinchZoom'];\n  children?: React.ReactNode;\n}\n\nconst Dialog: React.FC<DialogProps> = (props: ScopedProps<DialogProps>) => {\n  const {\n    __scopeDialog,\n    children,\n    open: openProp,\n    defaultOpen,\n    onOpenChange,\n    modal = true,\n    allowPinchZoom,\n  } = props;\n  const triggerRef = React.useRef<HTMLButtonElement>(null);\n  const [open = false, setOpen] = useControllableState({\n    prop: openProp,\n    defaultProp: defaultOpen,\n    onChange: onOpenChange,\n  });\n\n  return (\n    <DialogProvider\n      scope={__scopeDialog}\n      triggerRef={triggerRef}\n      contentId={useId()}\n      titleId={useId()}\n      descriptionId={useId()}\n      open={open}\n      onOpenChange={setOpen}\n      onOpenToggle={React.useCallback(() => setOpen((prevOpen) => !prevOpen), [setOpen])}\n      modal={modal}\n      allowPinchZoom={allowPinchZoom}\n    >\n      {children}\n    </DialogProvider>\n  );\n};\n\nDialog.displayName = DIALOG_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * DialogTrigger\n * -----------------------------------------------------------------------------------------------*/\n\nconst TRIGGER_NAME = 'DialogTrigger';\n\ntype DialogTriggerElement = React.ElementRef<typeof Primitive.button>;\ntype PrimitiveButtonProps = Radix.ComponentPropsWithoutRef<typeof Primitive.button>;\ninterface DialogTriggerProps extends PrimitiveButtonProps {}\n\nconst DialogTrigger = React.forwardRef<DialogTriggerElement, DialogTriggerProps>(\n  (props: ScopedProps<DialogTriggerProps>, forwardedRef) => {\n    const { __scopeDialog, ...triggerProps } = props;\n    const context = useDialogContext(TRIGGER_NAME, __scopeDialog);\n    const composedTriggerRef = useComposedRefs(forwardedRef, context.triggerRef);\n    return (\n      <Primitive.button\n        type=\"button\"\n        aria-haspopup=\"dialog\"\n        aria-expanded={context.open}\n        aria-controls={context.contentId}\n        data-state={getState(context.open)}\n        {...triggerProps}\n        ref={composedTriggerRef}\n        onClick={composeEventHandlers(props.onClick, context.onOpenToggle)}\n      />\n    );\n  }\n);\n\nDialogTrigger.displayName = TRIGGER_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * DialogPortal\n * -----------------------------------------------------------------------------------------------*/\n\nconst PORTAL_NAME = 'DialogPortal';\n\ntype PortalProps = React.ComponentPropsWithoutRef<typeof UnstablePortal>;\ntype DialogPortalElement = React.ElementRef<typeof UnstablePortal>;\ninterface DialogPortalProps extends PortalProps {\n  children?: React.ReactNode;\n  /**\n   * Used to force mounting when more control is needed. Useful when\n   * controlling animation with React animation libraries.\n   */\n  forceMount?: true;\n}\n\nconst DialogPortal = React.forwardRef<DialogPortalElement, DialogPortalProps>(\n  (props: ScopedProps<DialogPortalProps>, forwardedRef) => {\n    const { __scopeDialog, forceMount, children, ...portalProps } = props;\n    const context = useDialogContext(PORTAL_NAME, __scopeDialog);\n    return (\n      <>\n        {React.Children.map(children, (child) => (\n          <Presence present={forceMount || context.open}>\n            <UnstablePortal {...portalProps} asChild ref={forwardedRef}>\n              {child}\n            </UnstablePortal>\n          </Presence>\n        ))}\n      </>\n    );\n  }\n);\n\nDialogPortal.displayName = PORTAL_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * DialogOverlay\n * -----------------------------------------------------------------------------------------------*/\n\nconst OVERLAY_NAME = 'DialogOverlay';\n\ntype DialogOverlayElement = DialogOverlayImplElement;\ninterface DialogOverlayProps extends DialogOverlayImplProps {\n  /**\n   * Used to force mounting when more control is needed. Useful when\n   * controlling animation with React animation libraries.\n   */\n  forceMount?: true;\n}\n\nconst DialogOverlay = React.forwardRef<DialogOverlayElement, DialogOverlayProps>(\n  (props: ScopedProps<DialogOverlayProps>, forwardedRef) => {\n    const { forceMount, ...overlayProps } = props;\n    const context = useDialogContext(OVERLAY_NAME, props.__scopeDialog);\n    return context.modal ? (\n      <Presence present={forceMount || context.open}>\n        <DialogOverlayImpl {...overlayProps} ref={forwardedRef} />\n      </Presence>\n    ) : null;\n  }\n);\n\nDialogOverlay.displayName = OVERLAY_NAME;\n\ntype DialogOverlayImplElement = React.ElementRef<typeof Primitive.div>;\ntype PrimitiveDivProps = Radix.ComponentPropsWithoutRef<typeof Primitive.div>;\ninterface DialogOverlayImplProps extends PrimitiveDivProps {}\n\nconst DialogOverlayImpl = React.forwardRef<DialogOverlayImplElement, DialogOverlayImplProps>(\n  (props: ScopedProps<DialogOverlayImplProps>, forwardedRef) => {\n    const { __scopeDialog, ...overlayProps } = props;\n    const context = useDialogContext(OVERLAY_NAME, __scopeDialog);\n    return (\n      <RemoveScroll as={Slot} allowPinchZoom={context.allowPinchZoom}>\n        <Primitive.div\n          data-state={getState(context.open)}\n          {...overlayProps}\n          ref={forwardedRef}\n          // We re-enable pointer-events prevented by `Dialog.Content` to allow scrolling the overlay.\n          style={{ pointerEvents: 'auto', ...overlayProps.style }}\n        />\n      </RemoveScroll>\n    );\n  }\n);\n\n/* -------------------------------------------------------------------------------------------------\n * DialogContent\n * -----------------------------------------------------------------------------------------------*/\n\nconst CONTENT_NAME = 'DialogContent';\n\ntype DialogContentElement = DialogContentTypeElement;\ninterface DialogContentProps extends DialogContentTypeProps {\n  /**\n   * Used to force mounting when more control is needed. Useful when\n   * controlling animation with React animation libraries.\n   */\n  forceMount?: true;\n}\n\nconst DialogContent = React.forwardRef<DialogContentElement, DialogContentProps>(\n  (props: ScopedProps<DialogContentProps>, forwardedRef) => {\n    const { forceMount, ...contentProps } = props;\n    const context = useDialogContext(CONTENT_NAME, props.__scopeDialog);\n    return (\n      <Presence present={forceMount || context.open}>\n        {context.modal ? (\n          <DialogContentModal {...contentProps} ref={forwardedRef} />\n        ) : (\n          <DialogContentNonModal {...contentProps} ref={forwardedRef} />\n        )}\n      </Presence>\n    );\n  }\n);\n\nDialogContent.displayName = CONTENT_NAME;\n\n/* -----------------------------------------------------------------------------------------------*/\n\ntype DialogContentTypeElement = DialogContentImplElement;\ninterface DialogContentTypeProps\n  extends Omit<DialogContentImplProps, 'trapFocus' | 'disableOutsidePointerEvents'> {}\n\nconst DialogContentModal = React.forwardRef<DialogContentTypeElement, DialogContentTypeProps>(\n  (props: ScopedProps<DialogContentTypeProps>, forwardedRef) => {\n    const context = useDialogContext(CONTENT_NAME, props.__scopeDialog);\n    const contentRef = React.useRef<HTMLDivElement>(null);\n    const composedRefs = useComposedRefs(forwardedRef, contentRef);\n\n    // aria-hide everything except the content (better supported equivalent to setting aria-modal)\n    React.useEffect(() => {\n      const content = contentRef.current;\n      if (content) return hideOthers(content);\n    }, []);\n\n    return (\n      <DialogContentImpl\n        {...props}\n        ref={composedRefs}\n        // we make sure focus isn't trapped once `DialogContent` has been closed\n        // (closed !== unmounted when animating out)\n        trapFocus={context.open}\n        disableOutsidePointerEvents\n        onCloseAutoFocus={composeEventHandlers(props.onCloseAutoFocus, (event) => {\n          event.preventDefault();\n          context.triggerRef.current?.focus();\n        })}\n        onPointerDownOutside={composeEventHandlers(props.onPointerDownOutside, (event) => {\n          const originalEvent = event.detail.originalEvent;\n          const ctrlLeftClick = originalEvent.button === 0 && originalEvent.ctrlKey === true;\n          const isRightClick = originalEvent.button === 2 || ctrlLeftClick;\n\n          // If the event is a right-click, we shouldn't close because\n          // it is effectively as if we right-clicked the `Overlay`.\n          if (isRightClick) event.preventDefault();\n        })}\n        // When focus is trapped, a `focusout` event may still happen.\n        // We make sure we don't trigger our `onDismiss` in such case.\n        onFocusOutside={composeEventHandlers(props.onFocusOutside, (event) =>\n          event.preventDefault()\n        )}\n      />\n    );\n  }\n);\n\n/* -----------------------------------------------------------------------------------------------*/\n\nconst DialogContentNonModal = React.forwardRef<DialogContentTypeElement, DialogContentTypeProps>(\n  (props: ScopedProps<DialogContentTypeProps>, forwardedRef) => {\n    const context = useDialogContext(CONTENT_NAME, props.__scopeDialog);\n    const hasInteractedOutsideRef = React.useRef(false);\n\n    return (\n      <DialogContentImpl\n        {...props}\n        ref={forwardedRef}\n        trapFocus={false}\n        disableOutsidePointerEvents={false}\n        onCloseAutoFocus={(event) => {\n          props.onCloseAutoFocus?.(event);\n\n          if (!event.defaultPrevented) {\n            if (!hasInteractedOutsideRef.current) context.triggerRef.current?.focus();\n            // Always prevent auto focus because we either focus manually or want user agent focus\n            event.preventDefault();\n          }\n\n          hasInteractedOutsideRef.current = false;\n        }}\n        onInteractOutside={(event) => {\n          props.onInteractOutside?.(event);\n\n          if (!event.defaultPrevented) hasInteractedOutsideRef.current = true;\n\n          // Prevent dismissing when clicking the trigger.\n          // As the trigger is already setup to close, without doing so would\n          // cause it to close and immediately open.\n          //\n          // We use `onInteractOutside` as some browsers also\n          // focus on pointer down, creating the same issue.\n          const target = event.target as HTMLElement;\n          const targetIsTrigger = context.triggerRef.current?.contains(target);\n          if (targetIsTrigger) event.preventDefault();\n        }}\n      />\n    );\n  }\n);\n\n/* -----------------------------------------------------------------------------------------------*/\n\ntype DialogContentImplElement = React.ElementRef<typeof DismissableLayer>;\ntype DismissableLayerProps = Radix.ComponentPropsWithoutRef<typeof DismissableLayer>;\ntype FocusScopeProps = Radix.ComponentPropsWithoutRef<typeof FocusScope>;\ninterface DialogContentImplProps extends Omit<DismissableLayerProps, 'onDismiss'> {\n  /**\n   * When `true`, focus cannot escape the `Content` via keyboard,\n   * pointer, or a programmatic focus.\n   * @defaultValue false\n   */\n  trapFocus?: FocusScopeProps['trapped'];\n\n  /**\n   * Event handler called when auto-focusing on open.\n   * Can be prevented.\n   */\n  onOpenAutoFocus?: FocusScopeProps['onMountAutoFocus'];\n\n  /**\n   * Event handler called when auto-focusing on close.\n   * Can be prevented.\n   */\n  onCloseAutoFocus?: FocusScopeProps['onUnmountAutoFocus'];\n}\n\nconst DialogContentImpl = React.forwardRef<DialogContentImplElement, DialogContentImplProps>(\n  (props: ScopedProps<DialogContentImplProps>, forwardedRef) => {\n    const {\n      __scopeDialog,\n      'aria-label': ariaLabel,\n      'aria-labelledby': ariaLabelledBy,\n      'aria-describedby': ariaDescribedBy,\n      trapFocus,\n      onOpenAutoFocus,\n      onCloseAutoFocus,\n      ...contentProps\n    } = props;\n    const context = useDialogContext(CONTENT_NAME, __scopeDialog);\n    const contentRef = React.useRef<HTMLDivElement>(null);\n    const composedRefs = useComposedRefs(forwardedRef, contentRef);\n\n    // Make sure the whole tree has focus guards as our `Dialog` will be\n    // the last element in the DOM (beacuse of the `Portal`)\n    useFocusGuards();\n\n    return (\n      <>\n        <FocusScope\n          asChild\n          loop\n          trapped={trapFocus}\n          onMountAutoFocus={onOpenAutoFocus}\n          onUnmountAutoFocus={onCloseAutoFocus}\n        >\n          <DismissableLayer\n            role=\"dialog\"\n            id={context.contentId}\n            aria-describedby={ariaDescribedBy || context.descriptionId}\n            // If `aria-label` is set, ensure `aria-labelledby` is undefined as to avoid confusion.\n            // Otherwise fallback to an explicit `aria-labelledby` or the ID used in the\n            // `DialogTitle`\n            aria-labelledby={ariaLabel ? undefined : ariaLabelledBy || context.titleId}\n            aria-label={ariaLabel || undefined}\n            data-state={getState(context.open)}\n            {...contentProps}\n            ref={composedRefs}\n            onDismiss={() => context.onOpenChange(false)}\n          />\n        </FocusScope>\n        {process.env.NODE_ENV === 'development' && <LabelWarning contentRef={contentRef} />}\n      </>\n    );\n  }\n);\n\n/* -------------------------------------------------------------------------------------------------\n * DialogTitle\n * -----------------------------------------------------------------------------------------------*/\n\nconst TITLE_NAME = 'DialogTitle';\n\ntype DialogTitleElement = React.ElementRef<typeof Primitive.h2>;\ntype PrimitiveHeading2Props = Radix.ComponentPropsWithoutRef<typeof Primitive.h2>;\ninterface DialogTitleProps extends PrimitiveHeading2Props {}\n\nconst DialogTitle = React.forwardRef<DialogTitleElement, DialogTitleProps>(\n  (props: ScopedProps<DialogTitleProps>, forwardedRef) => {\n    const { __scopeDialog, ...titleProps } = props;\n    const context = useDialogContext(TITLE_NAME, __scopeDialog);\n    return <Primitive.h2 id={context.titleId} {...titleProps} ref={forwardedRef} />;\n  }\n);\n\nDialogTitle.displayName = TITLE_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * DialogDescription\n * -----------------------------------------------------------------------------------------------*/\n\nconst DESCRIPTION_NAME = 'DialogDescription';\n\ntype DialogDescriptionElement = React.ElementRef<typeof Primitive.p>;\ntype PrimitiveParagraphProps = Radix.ComponentPropsWithoutRef<typeof Primitive.p>;\ninterface DialogDescriptionProps extends PrimitiveParagraphProps {}\n\nconst DialogDescription = React.forwardRef<DialogDescriptionElement, DialogDescriptionProps>(\n  (props: ScopedProps<DialogDescriptionProps>, forwardedRef) => {\n    const { __scopeDialog, ...descriptionProps } = props;\n    const context = useDialogContext(DESCRIPTION_NAME, __scopeDialog);\n    return <Primitive.p id={context.descriptionId} {...descriptionProps} ref={forwardedRef} />;\n  }\n);\n\nDialogDescription.displayName = DESCRIPTION_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * DialogClose\n * -----------------------------------------------------------------------------------------------*/\n\nconst CLOSE_NAME = 'DialogClose';\n\ntype DialogCloseElement = React.ElementRef<typeof Primitive.button>;\ninterface DialogCloseProps extends PrimitiveButtonProps {}\n\nconst DialogClose = React.forwardRef<DialogCloseElement, DialogCloseProps>(\n  (props: ScopedProps<DialogCloseProps>, forwardedRef) => {\n    const { __scopeDialog, ...closeProps } = props;\n    const context = useDialogContext(CLOSE_NAME, __scopeDialog);\n    return (\n      <Primitive.button\n        type=\"button\"\n        {...closeProps}\n        ref={forwardedRef}\n        onClick={composeEventHandlers(props.onClick, () => context.onOpenChange(false))}\n      />\n    );\n  }\n);\n\nDialogClose.displayName = CLOSE_NAME;\n\n/* -----------------------------------------------------------------------------------------------*/\n\nfunction getState(open: boolean) {\n  return open ? 'open' : 'closed';\n}\n\nconst LABEL_WARNING_NAME = 'DialogLabelWarning';\n\nconst [LabelWarningProvider, useLabelWarningContext] = createContext(LABEL_WARNING_NAME, {\n  contentName: CONTENT_NAME,\n  titleName: TITLE_NAME,\n  docsSlug: 'dialog',\n});\n\ntype LabelWarningProps = {\n  contentRef: React.RefObject<DialogContentElement>;\n};\n\nconst LabelWarning: React.FC<LabelWarningProps> = ({ contentRef }) => {\n  const labelWarningContext = useLabelWarningContext(LABEL_WARNING_NAME);\n\n  const MESSAGE = `\\`${labelWarningContext.contentName}\\` requires a label for the component to be accessible for screen reader users.\n\nYou can label the \\`${labelWarningContext.contentName}\\` by passing a \\`${labelWarningContext.titleName}\\` component as a child, which also benefits sighted users by adding visible context to the dialog.\n\nAlternatively, you can use your own component as a title by assigning it an \\`id\\` and passing the same value to the \\`aria-labelledby\\` prop in \\`${labelWarningContext.contentName}\\`. If the label is confusing or duplicative for sighted users, you can also pass a label directly by using the \\`aria-label\\` prop.\n\nFor more information, see https://radix-ui.com/primitives/docs/components/${labelWarningContext.docsSlug}`;\n\n  React.useEffect(() => {\n    const hasLabel =\n      contentRef.current?.getAttribute('aria-label') ||\n      document.getElementById(contentRef.current?.getAttribute('aria-labelledby')!);\n\n    if (!hasLabel) console.warn(MESSAGE);\n  }, [MESSAGE, contentRef]);\n\n  return null;\n};\n\nconst Root = Dialog;\nconst Trigger = DialogTrigger;\nconst Portal = DialogPortal;\nconst Overlay = DialogOverlay;\nconst Content = DialogContent;\nconst Title = DialogTitle;\nconst Description = DialogDescription;\nconst Close = DialogClose;\n\nexport {\n  createDialogScope,\n  //\n  Dialog,\n  DialogTrigger,\n  DialogPortal,\n  DialogOverlay,\n  DialogContent,\n  DialogTitle,\n  DialogDescription,\n  DialogClose,\n  //\n  Root,\n  Trigger,\n  Portal,\n  Overlay,\n  Content,\n  Title,\n  Description,\n  Close,\n  //\n  LabelWarningProvider,\n};\nexport type {\n  DialogProps,\n  DialogTriggerProps,\n  DialogPortalProps,\n  DialogOverlayProps,\n  DialogContentProps,\n  DialogTitleProps,\n  DialogDescriptionProps,\n  DialogCloseProps,\n};\n"],
  "mappings": "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",
  "names": ["Primitive", "reduce", "primitive", "node", "forwardRef", "props", "forwardedRef", "asChild", "primitiveProps", "Comp", "Slot", "useEffect", "window", "Symbol", "for", "as", "console", "error", "AS_ERROR", "createElement", "_babelRuntimeHelpersEsmExtends", "ref", "Primitive", "reduce", "primitive", "node", "forwardRef", "props", "forwardedRef", "asChild", "primitiveProps", "Comp", "Slot", "useEffect", "window", "Symbol", "for", "as", "console", "error", "AS_ERROR", "createElement", "_babelRuntimeHelpersEsmExtends", "ref", "Portal", "forwardRef", "props", "forwardedRef", "_containerRef$current", "_globalThis$document", "containerRef", "style", "portalProps", "hostElement", "current", "globalThis", "document", "body", "forceUpdate", "useState", "useLayoutEffect", "ReactDOM", "createPortal", "createElement", "Primitive", "div", "_babelRuntimeHelpersEsmExtends", "ref", "position", "top", "left", "zIndex", "undefined", "UnstablePortal", "_globalThis$document2", "container", "Primitive", "reduce", "primitive", "node", "forwardRef", "props", "forwardedRef", "asChild", "primitiveProps", "Comp", "Slot", "useEffect", "window", "Symbol", "for", "as", "console", "error", "AS_ERROR", "createElement", "_babelRuntimeHelpersEsmExtends", "ref", "EVENT_OPTIONS", "bubbles", "cancelable", "FocusScope", "forwardRef", "props", "forwardedRef", "loop", "trapped", "onMountAutoFocus", "onMountAutoFocusProp", "onUnmountAutoFocus", "onUnmountAutoFocusProp", "scopeProps", "container", "setContainer", "useState", "useCallbackRef", "lastFocusedElementRef", "useRef", "composedRefs", "useComposedRefs", "node", "focusScope", "paused", "pause", "this", "resume", "current", "React", "useEffect", "handleFocusIn", "event", "target", "contains", "focus", "select", "handleFocusOut", "relatedTarget", "document", "addEventListener", "removeEventListener", "focusScopesStack", "add", "previouslyFocusedElement", "activeElement", "mountEvent", "Event", "dispatchEvent", "defaultPrevented", "candidates", "candidate", "items", "getTabbableCandidates", "filter", "item", "tagName", "setTimeout", "unmountEvent", "body", "remove", "handleKeyDown", "useCallback", "isTabKey", "key", "altKey", "ctrlKey", "metaKey", "focusedElement", "currentTarget", "first", "last", "findVisible", "reverse", "shiftKey", "preventDefault", "createElement", "Primitive", "div", "_babelRuntimeHelpersEsmExtends", "tabIndex", "ref", "onKeyDown", "nodes", "walker", "createTreeWalker", "NodeFilter", "SHOW_ELEMENT", "acceptNode", "isHiddenInput", "type", "disabled", "hidden", "FILTER_SKIP", "FILTER_ACCEPT", "nextNode", "push", "currentNode", "elements", "element", "isHidden", "upTo", "getComputedStyle", "visibility", "display", "parentElement", "preventScroll", "HTMLInputElement", "stack", "activeFocusScope", "arrayRemove", "unshift", "_stack$", "createFocusScopesStack", "array", "updatedArray", "index", "indexOf", "splice", "Primitive", "reduce", "primitive", "node", "forwardRef", "props", "forwardedRef", "asChild", "primitiveProps", "Comp", "Slot", "useEffect", "window", "Symbol", "for", "as", "console", "error", "AS_ERROR", "createElement", "_babelRuntimeHelpersEsmExtends", "ref", "TotalLayerCountProvider", "useTotalLayerCount", "createTotalLayerCount", "RunningLayerCountProvider", "usePreviousRunningLayerCount", "createRunningLayerCount", "TotalLayerCountWithDisabledOutsidePointerEventsProvider", "useTotalLayerCountWithDisabledOutsidePointerEvents", "RunningLayerCountWithDisabledOutsidePointerEventsProvider", "usePreviousRunningLayerCountWithDisabledOutsidePointerEvents", "DismissableLayer", "forwardRef", "props", "forwardedRef", "isRootLayer", "layer", "createElement", "$b3ca5e0c42ec5d7395c8cb24157$var$DismissableLayerImpl", "_babelRuntimeHelpersEsmExtends", "ref", "$b3ca5e0c42ec5d7395c8cb24157$var$TotalLayerCountProvider", "$b3ca5e0c42ec5d7395c8cb24157$var$TotalLayerCountWithDisabledOutsidePointerEventsProvider", "DismissableLayerImpl", "disableOutsidePointerEvents", "onEscapeKeyDown", "onPointerDownOutside", "onFocusOutside", "onInteractOutside", "onDismiss", "layerProps", "totalLayerCount", "runningLayerCount", "isDeepestLayer", "totalLayerCountWithDisabledOutsidePointerEvents", "runningLayerCountWithDisabledOutsidePointerEvents", "containsChildLayerWithDisabledOutsidePointerEvents", "useBodyPointerEvents", "disabled", "useEscapeKeydown", "event", "defaultPrevented", "onPointerDownCapture", "handlePointerDownCapture", "handlePointerDownOutside", "useCallbackRef", "isPointerInsideReactTreeRef", "useRef", "useEffect", "handlePointerDown", "target", "current", "pointerDownOutsideEvent", "CustomEvent", "bubbles", "cancelable", "detail", "originalEvent", "addEventListener", "once", "dispatchEvent", "timerId", "window", "setTimeout", "document", "clearTimeout", "removeEventListener", "onBlurCapture", "handleBlurCapture", "onFocusCapture", "handleFocusCapture", "handleFocusOutside", "isFocusInsideReactTreeRef", "handleFocus", "focusOutsideEvent", "shouldReEnablePointerEvents", "$b3ca5e0c42ec5d7395c8cb24157$var$RunningLayerCountProvider", "runningCount", "$b3ca5e0c42ec5d7395c8cb24157$var$RunningLayerCountWithDisabledOutsidePointerEventsProvider", "Primitive", "div", "style", "pointerEvents", "undefined", "composeEventHandlers", "displayName", "TotalLayerCountProviderImpl", "useTotalLayerCountContext", "createContext", "total", "onTotalIncrease", "onTotalDecrease", "children", "setTotal", "useState", "useCallback", "n", "counted", "useLayoutEffect", "RunningLayerCountProviderImp", "useRunningLayerCount", "count", "useReactId", "useId", "count", "deterministicId", "id", "setId", "useState", "useLayoutEffect", "reactId", "String", "createDialogContext", "createDialogScope", "createContextScope", "DialogProvider", "useDialogContext", "createDialogContext", "Dialog", "props", "__scopeDialog", "children", "open", "openProp", "defaultOpen", "onOpenChange", "modal", "allowPinchZoom", "triggerRef", "useRef", "setOpen", "useControllableState", "prop", "defaultProp", "onChange", "createElement", "$da81f3af863821fb8a193d321c41d$var$DialogProvider", "scope", "contentId", "useId", "titleId", "descriptionId", "onOpenToggle", "useCallback", "prevOpen", "DialogTrigger", "forwardRef", "forwardedRef", "triggerProps", "context", "composedTriggerRef", "useComposedRefs", "Primitive", "button", "_babelRuntimeHelpersEsmExtends", "type", "getState", "ref", "onClick", "composeEventHandlers", "DialogPortal", "forceMount", "portalProps", "Fragment", "Children", "map", "child", "Presence", "present", "UnstablePortal", "asChild", "DialogOverlay", "overlayProps", "$da81f3af863821fb8a193d321c41d$var$DialogOverlayImpl", "DialogOverlayImpl", "RemoveScroll", "as", "Slot", "div", "style", "pointerEvents", "DialogContent", "contentProps", "$da81f3af863821fb8a193d321c41d$var$DialogContentModal", "$da81f3af863821fb8a193d321c41d$var$DialogContentNonModal", "DialogContentModal", "contentRef", "composedRefs", "useEffect", "content", "current", "hideOthers", "$da81f3af863821fb8a193d321c41d$var$DialogContentImpl", "trapFocus", "disableOutsidePointerEvents", "onCloseAutoFocus", "event", "_context$triggerRef$c", "preventDefault", "focus", "onPointerDownOutside", "originalEvent", "detail", "ctrlLeftClick", "ctrlKey", "onFocusOutside", "DialogContentNonModal", "hasInteractedOutsideRef", "_props$onCloseAutoFoc", "_context$triggerRef$c2", "call", "defaultPrevented", "onInteractOutside", "_props$onInteractOuts", "_context$triggerRef$c3", "target", "contains", "DialogContentImpl", "ariaLabel", "ariaLabelledBy", "ariaDescribedBy", "onOpenAutoFocus", "useFocusGuards", "FocusScope", "loop", "trapped", "onMountAutoFocus", "onUnmountAutoFocus", "DismissableLayer", "role", "id", "onDismiss", "DialogTitle", "titleProps", "h2", "DialogDescription", "descriptionProps", "p", "DialogClose", "closeProps", "LabelWarningProvider", "useLabelWarningContext", "createContext", "contentName", "titleName", "docsSlug", "Root", "Dialog", "Trigger", "DialogTrigger", "Portal", "DialogPortal", "Overlay", "DialogOverlay", "Content", "DialogContent", "Title", "DialogTitle", "Description", "DialogDescription", "Close", "DialogClose"]
}
