{
  "version": 3,
  "sources": ["../../../../../node_modules/@aragon/sdk-common/src/constants.ts", "../../../../../node_modules/@aragon/sdk-common/src/utils.ts", "../../../../../node_modules/@aragon/sdk-common/src/encoding.ts", "../../../../../node_modules/@aragon/sdk-common/src/errors.ts", "../../../../../node_modules/@aragon/sdk-common/src/promises.ts", "../../../../../node_modules/@aragon/sdk-common/src/uri.ts", "../../../../../node_modules/@aragon/sdk-common/src/timeout.ts"],
  "sourcesContent": ["export const XDAI_CHAIN_ID = 100;\nexport const XDAI_PROVIDER_URI = \"https://dai.poa.network\";\n\nexport const SOKOL_CHAIN_ID = 77;\nexport const SOKOL_PROVIDER_URI = \"https://sokol.poa.network\";\n\nexport const MATIC_CHAIN_ID = 137;\nexport const MATIC_PROVIDER_URI = \"https://polygon-rpc.com\";\n\nexport const MUMBAI_CHAIN_ID = 80001;\nexport const MUMBAI_PROVIDER_URI = \"https://rpc-mumbai.matic.today\";\n\nexport declare const AVAX_FUJI_CHAIN_ID = 43113;\nexport declare const AVAX_CHAIN_ID = 43114;\nexport declare const AVAX_FUJI_PROVIDER =\n  \"https://api.avax-test.network/ext/bc/C/rpc\";\nexport declare const AVAX_PROVIDER =\n  \"https://api.avax-test.network/ext/bc/C/rpc\";\n", "export function isProposalId(propoosalId: string): boolean {\n  const regex = new RegExp(/^0x[A-Fa-f0-9]{40}_0x[A-Fa-f0-9]{1,64}$/i);\n  return regex.test(propoosalId);\n}\n", "import { isProposalId } from \"./utils\";\nimport { hexZeroPad } from \"@ethersproject/bytes\";\n\n/** Decodes a hex string and returns it as a buffer */\nexport function hexToBytes(hexString: string): Uint8Array {\n  if (!hexString) return new Uint8Array();\n  else if (!/^(0x)?[0-9a-fA-F]*$/.test(hexString)) {\n    throw new Error(\"Invalid hex string\");\n  } else if (hexString.length % 2 !== 0) {\n    throw new Error(\"The hex string has an odd length\");\n  }\n\n  hexString = strip0x(hexString);\n  const bytes = [];\n  for (let i = 0; i < hexString.length; i += 2) {\n    bytes.push(\n      parseInt(hexString.substring(i, i + 2), 16),\n    );\n  }\n  return Uint8Array.from(bytes);\n}\n\n/** Encodes a buffer into a hex string with the \"0x\" prefix */\nexport function bytesToHex(buff: Uint8Array, skip0x?: boolean): string {\n  const bytes: string[] = [];\n  for (let i = 0; i < buff.length; i++) {\n    if (buff[i] >= 16) bytes.push(buff[i].toString(16));\n    else bytes.push(\"0\" + buff[i].toString(16));\n  }\n  if (skip0x) return bytes.join(\"\");\n  return \"0x\" + bytes.join(\"\");\n}\n\n/** Encodes the given big integer as a 32 byte big endian buffer */\nexport function bigIntToBuffer(number: bigint): Uint8Array {\n  let hexNumber = number.toString(16);\n  while (hexNumber.length < 64) hexNumber = \"0\" + hexNumber;\n  return hexToBytes(hexNumber);\n}\n\n/** Encodes the given big integer as a 32 byte little endian buffer */\nexport function bigIntToLeBuffer(number: bigint): Uint8Array {\n  return bigIntToBuffer(number).reverse();\n}\n\n/** Transforms the given (big endian) buffer into a big int */\nexport function bufferToBigInt(bytes: Buffer | Uint8Array): bigint {\n  // Ensure that it is a buffer\n  bytes = Buffer.from(bytes);\n  return BigInt(ensure0x(bytes.toString(\"hex\")));\n}\n\n/** Transforms the given (little endian) buffer into a endian big int */\nexport function bufferLeToBigInt(bytes: Buffer | Uint8Array): bigint {\n  bytes = Buffer.from(bytes);\n  return bufferToBigInt(bytes.reverse());\n}\n\nexport function ensure0x(value: string): string {\n  return value.startsWith(\"0x\") ? value : \"0x\" + value;\n}\n\nexport function strip0x(value: string): string {\n  return value.startsWith(\"0x\") ? value.substring(2) : value;\n}\n\n/**\n * Encodes a 0-1 ratio within the given digit precision for storage on a smart contract\n *\n * @export\n * @param {number} ratio\n * @param {number} digits\n * @return {*}  {bigint}\n */\nexport function encodeRatio(ratio: number, digits: number): number {\n  if (ratio < 0 || ratio > 1) {\n    throw new Error(\"The ratio value should range between 0 and 1\");\n  } else if (!Number.isInteger(digits) || digits < 1 || digits > 15) {\n    throw new Error(\n      \"The number of digits should range between 1 and 15\",\n    );\n  }\n  return Math.round(ratio * (10 ** digits));\n}\n/**\n * Decodes a value received from a smart contract to a number with\n *\n * @export\n * @param {bigint} onChainValue\n * @param {number} digits\n * @return {*}  {number}\n */\nexport function decodeRatio(\n  onChainValue: bigint | number,\n  digits: number,\n): number {\n  if (!Number.isInteger(digits) || digits < 1 || digits > 15) {\n    throw new Error(\n      \"The number of digits should be a positive integer between 1 and 15\",\n    );\n  } else if (onChainValue > 10 ** digits) {\n    throw new Error(\"The value is out of range\");\n  }\n\n  return Number(onChainValue) / (10 ** digits);\n}\n\n/** Encodes the particles of a proposalId into a globally unque value for subgraph */\nexport function encodeProposalId(pluginAddress: string, id: number) {\n  if (!/^0x[A-Fa-f0-9]{40}$/.test(pluginAddress)) {\n    throw new Error(\"Invalid address\");\n  }\n\n  return `${pluginAddress}_0x${id.toString(16)}`;\n}\n\n/** Decodes a proposalId from subgraph and returns the original pluginAddress and the nonce */\nexport function decodeProposalId(\n  proposalId: string,\n): { pluginAddress: string; id: number } {\n  if (!isProposalId(proposalId)) {\n    throw new Error(\"Invalid proposalId\");\n  }\n\n  const matchedRegexResult =\n    proposalId.match(/^(0x[A-Fa-f0-9]{40})_(0x[A-Fa-f0-9]{1,64})$/) || [];\n  if (matchedRegexResult.length !== 3) {\n    throw new Error(\"Could not parse the proposal ID\");\n  }\n\n  return {\n    pluginAddress: matchedRegexResult[1],\n    id: parseInt(strip0x(matchedRegexResult[2]), 16),\n  };\n}\n\n/** Gets the extended version of a proposal id from the compact one */\nexport const getExtendedProposalId = (proposalId: string): string => {\n  if (!proposalId.match(/^(0x[A-Fa-f0-9]{40})_(0x[A-Fa-f0-9]{1,64})$/)) {\n    throw new Error(\"Invalid proposalId\");\n  }\n  const splits = proposalId.split(\"_\");\n  return splits[0].toLowerCase() + \"_\" + hexZeroPad(splits[1], 32);\n};\n/** Gets the compact version of a proposal id from the extended one */\nexport const getCompactProposalId = (proposalId: string): string => {\n  if (!proposalId.match(/^(0x[A-Fa-f0-9]{40})_(0x[A-Fa-f0-9]{1,64})$/)) {\n    throw new Error(\"Invalid proposalId\");\n  }\n  const splits = proposalId.split(\"_\");\n  return splits[0].toLowerCase() + \"_0x\" + parseInt(splits[1]).toString(16);\n};\n\n/** Transforms an array of booleans into a bitmap big integer */\nexport function boolArrayToBitmap(bools?: Array<boolean>) {\n  if (!bools || !bools.length) return BigInt(0);\n  else if (bools.length > 256) throw new Error(\"The array is too big\");\n\n  let result = BigInt(0);\n  for (let i = 0; i < 256; i++) {\n    if (!bools[i]) continue;\n    result |= BigInt(1) << BigInt(i);\n  }\n\n  return result;\n}\n\n/** Transforms an array of booleans into a bitmap big integer */\nexport function bitmapToBoolArray(bitmap: bigint): Array<boolean> {\n  if (bitmap >= (BigInt(1) << BigInt(256))) {\n    throw new Error(\"The bitmap value is too big\");\n  }\n\n  const result: Array<boolean> = [];\n  for (let i = 0; i < 256; i++) {\n    const mask = BigInt(1) << BigInt(i);\n    result.push((bitmap & mask) != BigInt(0));\n  }\n\n  return result;\n}\n", "export class TimeoutError extends Error {\n  constructor(message?: string) {\n    super(message ? message : \"Time out\");\n  }\n}\nexport class UnsupportedProtocolError extends Error {\n  constructor(protocol: string) {\n    super(\"Unsupported protocol: \" + protocol);\n  }\n}\nexport class GraphQLError extends Error {\n  constructor(model: string) {\n    super(\"Cannot fetch the \" + model + \" data from GraphQL\");\n  }\n}\nexport class InvalidAddressOrEnsError extends Error {\n  constructor() {\n    super(\"Invalid address or ENS\");\n  }\n}\nexport class InvalidAddressError extends Error {\n  constructor() {\n    super(\"Invalid address\");\n  }\n}\nexport class InvalidCidError extends Error {\n  constructor() {\n    super(\"The value does not contain a valid CiD\");\n  }\n}\nexport class InvalidProposalIdError extends Error {\n  constructor() {\n    super(\"Invalid proposal ID\");\n  }\n}\nexport class NoProviderError extends Error {\n  constructor() {\n    super(\"A web3 provider is needed\");\n  }\n}\nexport class NoSignerError extends Error {\n  constructor() {\n    super(\"A signer is needed\");\n  }\n}\nexport class UnexpectedActionError extends Error {\n  constructor() {\n    super(\"The received action is different from the expected one\");\n  }\n}\n\nexport class NoTokenAddress extends Error {\n  constructor() {\n    super(\"A token address is needed\");\n  }\n}\n\nexport class NoDaoFactory extends Error {\n  constructor() {\n    super(\"A dao factory address is needed\");\n  }\n}\n\nexport class NoPluginRepoRegistry extends Error {\n  constructor() {\n    super(\"A plugin repo registry address is needed\");\n  }\n}\n\nexport class NoDaoRegistry extends Error {\n  constructor() {\n    super(\"A dao registry address is needed\");\n  }\n}\n\nexport class IpfsPinError extends Error {\n  constructor() {\n    super(\"Failed to pin data on IPFS\");\n  }\n}\n\nexport class ProposalCreationError extends Error {\n  constructor() {\n    super(\"Failed to create proposal\");\n  }\n}\n\nexport class MissingExecPermissionError extends Error {\n  constructor() {\n    super(\"No plugin requests EXECUTE_PERMISSION\");\n  }\n}\nexport class IpfsFetchError extends Error {\n  constructor() {\n    super(\"Failed to fetch data from IPFS\");\n  }\n}\nexport class InvalidVotingModeError extends Error {\n  constructor() {\n    super(\"Invalid voting mode\");\n  }\n}\nexport class UpdateAllowanceError extends Error {\n  constructor() {\n    super(\"Could not define a minimum allowance\");\n  }\n}\nexport class InvalidPrecisionError extends Error {\n  constructor() {\n    super(\"Invalid precision, number must be an integer greater than 0\");\n  }\n}\nexport class FailedDepositError extends Error {\n  constructor() {\n    super(\"Failed to deposit\");\n  }\n}\nexport class AmountMismatchError extends Error {\n  constructor(expected: bigint, received: bigint) {\n    super(\n      `Deposited amount mismatch. Expected: ${expected}, received: ${received}`,\n    );\n  }\n}\nexport class UnsupportedNetworkError extends Error {\n  constructor(network: string) {\n    super(\"Unsupported network: \" + network);\n  }\n}\nexport class ClientNotInitializedError extends Error {\n  constructor(client: string) {\n    super(client + \" client is not initialized\");\n  }\n}\nexport class NoNodesAvailableError extends Error {\n  constructor(name: string) {\n    super(\"No \" + name + \" nodes available\");\n  }\n}\n\nexport class PluginInstallationPreparationError extends Error {\n  constructor() {\n    super(\"Failed to install plugin\");\n  }\n}\n", "/**\n * This function emulates the Promise.allSettled()\n *\n * @param proms\n */\nexport function allSettled(\n  proms: Array<Promise<any>>,\n): Promise<\n  Array<{ value: any; status: string } | { reason: Error; status: string }>\n> {\n  return Promise.all(proms.map(reflect));\n}\n\nfunction reflect<T>(prom: Promise<T>) {\n  return prom\n    .then((value: T) => ({ value, status: \"fulfilled\" }))\n    .catch((reason: T) => ({ reason, status: \"rejected\" }));\n}\n\nexport async function runAndRetry<T>({ func, onFail, shouldRetry }: {\n  func: () => Promise<T>;\n  onFail?: (e: Error) => void;\n  shouldRetry: () => boolean;\n}) {\n  let lastErr: Error;\n  do {\n    try {\n      const result = await func();\n      // it worked\n      return result;\n    } catch (err) {\n      lastErr = err as Error;\n      if (typeof onFail === \"function\") {\n        onFail(err as Error);\n      }\n    }\n  } while (shouldRetry());\n\n  // all the iterations failed\n  throw lastErr;\n}\n", "import { InvalidCidError } from \"./errors\";\nexport class MultiUri {\n  readonly items: string[] = [];\n\n  constructor(multiUri: string) {\n    if (!multiUri) throw new Error(\"The multi URI is empty\");\n    this.items = multiUri.split(\",\");\n  }\n\n  get ipfsCid() {\n    for (let item of this.items) {\n      if (IPFS_CID_REGEX.test(item)) return item;\n      else if (item.startsWith(\"ipfs://\")) {\n        item = item.substring(7);\n      }\n      const idx = item.indexOf(\"/\");\n      const cid = (idx < 0) ? item : item.substring(0, idx);\n\n      if (!IPFS_CID_REGEX.test(cid)) continue;\n      return cid;\n    }\n    return null;\n  }\n  get ipfs() {\n    for (let item of this.items) {\n      if (IPFS_CID_REGEX.test(item)) return { cid: item, path: \"\" };\n      else if (item.startsWith(\"ipfs://\")) {\n        item = item.substring(7);\n      }\n      let pathIdx = item.indexOf(\"/\");\n\n      let cid = item;\n      if (pathIdx < 0) {\n        if (!IPFS_CID_REGEX.test(cid)) continue;\n        return { cid, path: \"\" };\n      }\n      cid = item.substring(0, pathIdx);\n      if (!IPFS_CID_REGEX.test(cid)) continue;\n\n      let searchIdx = item.indexOf(\"?\");\n      if (searchIdx < 0) searchIdx = item.indexOf(\"#\");\n\n      if (searchIdx < 0) {\n        return {\n          cid,\n          path: item.substring(pathIdx),\n        };\n      }\n\n      return {\n        cid,\n        path: item.substring(pathIdx, searchIdx),\n      };\n    }\n    return null;\n  }\n  get http() {\n    return this.items.filter((item) =>\n      item.startsWith(\"http://\") || item.startsWith(\"https://\")\n    );\n  }\n}\n\nconst IPFS_CID_REGEX =\n  /^Qm([1-9A-HJ-NP-Za-km-z]{44,}|b[A-Za-z2-7]{58,}|B[A-Z2-7]{58,}|z[1-9A-HJ-NP-Za-km-z]{48,}|F[0-9A-F]{50,})$/;\n\n/** Attempts to parse the given string as a URL and returns the IPFS CiD contained in it.\n * Alternatively it tries to use the raw value after validating it.\n */\nexport function resolveIpfsCid(data: string): string {\n  const uri = new MultiUri(data);\n  const cid = uri.ipfsCid;\n  if (!cid) {\n    throw new InvalidCidError();\n  }\n  return cid;\n}\n", "import { TimeoutError } from \"./errors\";\n\n/**\n * @param func The promise-returning function to invoke\n * @param timeout Timeout (in seconds) to wait before failing\n * @param timeoutMessage (optional) Message to use when throwing a timeout error\n */\nexport function promiseFuncWithTimeout<T>(\n  func: () => Promise<T>,\n  timeout: number,\n  timeoutMessage?: string,\n): Promise<T> {\n  if (typeof func !== \"function\") throw new Error(\"Invalid function\");\n  else if (isNaN(timeout) || timeout < 0) throw new Error(\"Invalid timeout\");\n\n  return new Promise((resolve, reject) => {\n    setTimeout(\n      () => reject(new TimeoutError(timeoutMessage || \"Time out\")),\n      timeout,\n    );\n\n    return func()\n      .then((result) => resolve(result))\n      .catch((err) => reject(err));\n  });\n}\n\n/**\n * @param prom The promise to track\n * @param timeout Timeout (in milliseconds) to wait before failing\n * @param timeoutMessage (optional) Message to use when throwing a timeout error. By default: `\"Time out\"`\n */\nexport function promiseWithTimeout<T>(\n  prom: Promise<T>,\n  timeout: number,\n  timeoutMessage?: string,\n): Promise<T> {\n  if (\n    !prom ||\n    typeof prom.then !== \"function\" ||\n    typeof prom.catch !== \"function\"\n  ) {\n    throw new Error(\"Invalid promise\");\n  } else if (isNaN(timeout) || timeout < 0) throw new Error(\"Invalid timeout\");\n\n  return new Promise((resolve, reject) => {\n    setTimeout(\n      () => reject(new TimeoutError(timeoutMessage || \"Time out\")),\n      timeout,\n    );\n\n    return prom.then((result) => resolve(result)).catch((err) => reject(err));\n  });\n}\n\n"],
  "mappings": "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",
  "names": ["XDAI_CHAIN_ID", "XDAI_PROVIDER_URI", "SOKOL_CHAIN_ID", "SOKOL_PROVIDER_URI", "MATIC_CHAIN_ID", "MATIC_PROVIDER_URI", "MUMBAI_CHAIN_ID", "MUMBAI_PROVIDER_URI", "isProposalId", "propoosalId", "regex", "RegExp", "test", "hexToBytes", "hexString", "Uint8Array", "Error", "length", "strip0x", "bytes", "i", "push", "parseInt", "substring", "from", "bytesToHex", "buff", "skip0x", "toString", "join", "bigIntToBuffer", "number", "hexNumber", "bigIntToLeBuffer", "reverse", "bufferToBigInt", "Buffer", "BigInt", "ensure0x", "bufferLeToBigInt", "value", "startsWith", "encodeRatio", "ratio", "digits", "Number", "isInteger", "Math", "round", "pow", "decodeRatio", "onChainValue", "encodeProposalId", "pluginAddress", "id", "decodeProposalId", "proposalId", "matchedRegexResult", "match", "getExtendedProposalId", "splits", "split", "toLowerCase", "hexZeroPad", "getCompactProposalId", "boolArrayToBitmap", "bools", "result", "bitmapToBoolArray", "bitmap", "mask", "TimeoutError", "_Error", "_inheritsLoose", "message", "call", "_wrapNativeSuper", "UnsupportedProtocolError", "_Error2", "protocol", "GraphQLError", "_Error3", "model", "InvalidAddressOrEnsError", "_Error4", "InvalidAddressError", "_Error5", "InvalidCidError", "_Error6", "InvalidProposalIdError", "_Error7", "NoProviderError", "_Error8", "NoSignerError", "_Error9", "UnexpectedActionError", "_Error10", "NoTokenAddress", "_Error11", "NoDaoFactory", "_Error12", "NoPluginRepoRegistry", "_Error13", "NoDaoRegistry", "_Error14", "IpfsPinError", "_Error15", "ProposalCreationError", "_Error16", "MissingExecPermissionError", "_Error17", "IpfsFetchError", "_Error18", "InvalidVotingModeError", "_Error19", "UpdateAllowanceError", "_Error20", "InvalidPrecisionError", "_Error21", "FailedDepositError", "_Error22", "AmountMismatchError", "_Error23", "expected", "received", "UnsupportedNetworkError", "_Error24", "network", "ClientNotInitializedError", "_Error25", "client", "NoNodesAvailableError", "_Error26", "name", "PluginInstallationPreparationError", "_Error27", "allSettled", "proms", "Promise", "all", "map", "reflect", "prom", "then", "status", "reason", "runAndRetry", "_x", "_runAndRetry", "apply", "arguments", "_asyncToGenerator", "_regeneratorRuntime", "mark", "_callee", "_ref", "func", "onFail", "shouldRetry", "lastErr", "wrap", "_callee$", "_context", "prev", "next", "sent", "abrupt", "t0", "stop", "MultiUri", "multiUri", "items", "_createClass", "key", "get", "_iterator", "_createForOfIteratorHelperLoose", "_step", "done", "item", "IPFS_CID_REGEX", "idx", "indexOf", "cid", "_iterator2", "_step2", "path", "pathIdx", "searchIdx", "filter", "resolveIpfsCid", "data", "uri", "ipfsCid", "promiseFuncWithTimeout", "timeout", "timeoutMessage", "isNaN", "resolve", "reject", "setTimeout", "err", "promiseWithTimeout"]
}
