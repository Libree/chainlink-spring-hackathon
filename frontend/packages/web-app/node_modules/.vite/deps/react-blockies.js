import {
  require_prop_types
} from "./chunk-NYT74EQ2.js";
import {
  require_react
} from "./chunk-CIKXJ334.js";
import {
  __commonJS
} from "./chunk-J43GMYXM.js";

// ../../node_modules/react-blockies/dist/main.js
var require_main = __commonJS({
  "../../node_modules/react-blockies/dist/main.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var _extends = Object.assign || function(target) {
      for (var i = 1; i < arguments.length; i++) {
        var source = arguments[i];
        for (var key in source) {
          if (Object.prototype.hasOwnProperty.call(source, key)) {
            target[key] = source[key];
          }
        }
      }
      return target;
    };
    var _createClass = function() {
      function defineProperties(target, props) {
        for (var i = 0; i < props.length; i++) {
          var descriptor = props[i];
          descriptor.enumerable = descriptor.enumerable || false;
          descriptor.configurable = true;
          if ("value" in descriptor)
            descriptor.writable = true;
          Object.defineProperty(target, descriptor.key, descriptor);
        }
      }
      return function(Constructor, protoProps, staticProps) {
        if (protoProps)
          defineProperties(Constructor.prototype, protoProps);
        if (staticProps)
          defineProperties(Constructor, staticProps);
        return Constructor;
      };
    }();
    var _react = require_react();
    var _react2 = _interopRequireDefault(_react);
    var _propTypes = require_prop_types();
    var _propTypes2 = _interopRequireDefault(_propTypes);
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _possibleConstructorReturn(self, call) {
      if (!self) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return call && (typeof call === "object" || typeof call === "function") ? call : self;
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });
      if (superClass)
        Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
    }
    var Identicon = function(_Component) {
      _inherits(Identicon2, _Component);
      function Identicon2(props) {
        _classCallCheck(this, Identicon2);
        var _this = _possibleConstructorReturn(this, (Identicon2.__proto__ || Object.getPrototypeOf(Identicon2)).call(this, props));
        _this.generateIdenticon = _this.generateIdenticon.bind(_this);
        return _this;
      }
      _createClass(Identicon2, [{
        key: "componentDidMount",
        value: function componentDidMount() {
          this.generateIdenticon(_extends({}, this.props));
        }
      }, {
        key: "componentWillUpdate",
        value: function componentWillUpdate(nextProps) {
          if (!this.isEquivalent(this.props, nextProps))
            this.generateIdenticon(_extends({}, nextProps));
        }
      }, {
        key: "isEquivalent",
        value: function isEquivalent(prevProps, nextProps) {
          var aProps = Object.getOwnPropertyNames(prevProps);
          var bProps = Object.getOwnPropertyNames(nextProps);
          if (aProps.length != bProps.length) {
            return false;
          }
          for (var i = 0; i < aProps.length; i++) {
            var propName = aProps[i];
            if (prevProps[propName] !== nextProps[propName]) {
              return false;
            }
          }
          return true;
        }
      }, {
        key: "generateIdenticon",
        value: function generateIdenticon(options) {
          var randseed = new Array(4);
          function seedrand(seed2) {
            for (var i = 0; i < randseed.length; i++) {
              randseed[i] = 0;
            }
            for (var _i = 0; _i < seed2.length; _i++) {
              randseed[_i % 4] = (randseed[_i % 4] << 5) - randseed[_i % 4] + seed2.charCodeAt(_i);
            }
          }
          function rand() {
            var t = randseed[0] ^ randseed[0] << 11;
            randseed[0] = randseed[1];
            randseed[1] = randseed[2];
            randseed[2] = randseed[3];
            randseed[3] = randseed[3] ^ randseed[3] >> 19 ^ t ^ t >> 8;
            return (randseed[3] >>> 0) / (1 << 31 >>> 0);
          }
          function createColor() {
            var h = Math.floor(rand() * 360);
            var s = rand() * 60 + 40 + "%";
            var l = (rand() + rand() + rand() + rand()) * 25 + "%";
            var color2 = "hsl(" + h + "," + s + "," + l + ")";
            return color2;
          }
          function createImageData(size2) {
            var width = size2;
            var height = size2;
            var dataWidth = Math.ceil(width / 2);
            var mirrorWidth = width - dataWidth;
            var data = [];
            for (var y = 0; y < height; y++) {
              var row = [];
              for (var x = 0; x < dataWidth; x++) {
                row[x] = Math.floor(rand() * 2.3);
              }
              var r = row.slice(0, mirrorWidth);
              r.reverse();
              row = row.concat(r);
              for (var i = 0; i < row.length; i++) {
                data.push(row[i]);
              }
            }
            return data;
          }
          function setCanvas(identicon, imageData2, color2, scale2, bgcolor2, spotcolor2) {
            var width = Math.sqrt(imageData2.length);
            var size2 = width * scale2;
            identicon.width = size2;
            identicon.style.width = size2 + "px";
            identicon.height = size2;
            identicon.style.height = size2 + "px";
            var cc = identicon.getContext("2d");
            cc.fillStyle = bgcolor2;
            cc.fillRect(0, 0, identicon.width, identicon.height);
            cc.fillStyle = color2;
            for (var i = 0; i < imageData2.length; i++) {
              cc.fillStyle = imageData2[i] === 1 ? color2 : spotcolor2;
              if (imageData2[i]) {
                var row = Math.floor(i / width);
                var col = i % width;
                cc.fillRect(col * scale2, row * scale2, scale2, scale2);
              }
            }
          }
          var opts = options || {};
          var size = opts.size || 8;
          var scale = opts.scale || 4;
          var seed = opts.seed || Math.floor(Math.random() * Math.pow(10, 16)).toString(16);
          seedrand(seed);
          var color = opts.color || createColor();
          var bgcolor = opts.bgColor || createColor();
          var spotcolor = opts.spotColor || createColor();
          var imageData = createImageData(size);
          var canvas = setCanvas(this.identicon, imageData, color, scale, bgcolor, spotcolor);
          return canvas;
        }
      }, {
        key: "render",
        value: function render() {
          var _this2 = this;
          return _react2.default.createElement("canvas", {
            ref: function ref(identicon) {
              _this2.identicon = identicon;
            },
            className: this.props.className
          });
        }
      }]);
      return Identicon2;
    }(_react.Component);
    exports.default = Identicon;
    Identicon.defaultProps = {
      className: "identicon"
    };
    Identicon.propTypes = {
      seed: _propTypes2.default.string.isRequired,
      size: _propTypes2.default.number,
      scale: _propTypes2.default.number,
      color: _propTypes2.default.string,
      bgColor: _propTypes2.default.string,
      spotColor: _propTypes2.default.string
    };
  }
});

// dep:react-blockies
var react_blockies_default = require_main();
export {
  react_blockies_default as default
};
//# sourceMappingURL=react-blockies.js.map
